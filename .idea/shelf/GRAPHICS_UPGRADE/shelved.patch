Index: src/states.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export enum Color {\r\n  GOLD = \"GOLD\",\r\n  SILVER = \"SILVER\",\r\n  RED = \"RED\",\r\n  BLUE = \"BLUE\",\r\n  GREEN = \"GREEN\",\r\n  PURPLE = \"PURPLE\",\r\n}\r\n\r\nexport enum Type {\r\n  SKILL = \"SKILL\",\r\n  ATTACK = \"ATTACK\",\r\n  MOVEMENT = \"MOVEMENT\",\r\n  DEFENSE = \"DEFENSE\",\r\n  DEFENSE_SKILL = \"DEFENSE_SKILL\",\r\n}\r\n\r\nexport enum ValueSign {\r\n  NONE = \"NONE\",\r\n  PLUS = \"PLUS\",\r\n  MINUS = \"MINUS\",\r\n  EXCLAMATION = \"EXCLAMATION\",\r\n}\r\n\r\nexport enum Modifier {\r\n  NONE = \"NONE\",\r\n  RANGE = \"RANGE\",\r\n  AREA = \"AREA\",\r\n}\r\n\r\nexport enum Item {\r\n  ATTACK = \"ATTACK\",\r\n  DEFENSE = \"DEFENSE\",\r\n  INITIATIVE = \"INITIATIVE\",\r\n  RANGE = \"RANGE\",\r\n  AREA = \"AREA\",\r\n  MOVEMENT = \"MOVEMENT\",\r\n}\r\n\r\nexport enum Stat {\r\n  ATTACK = \"ATTACK\",\r\n  DEFENSE = \"DEFENSE\",\r\n  INITIATIVE = \"INITIATIVE\",\r\n  MOVEMENT = \"MOVEMENT\",\r\n}\r\n\r\nexport class Hero {\r\n  name: string\r\n  stats: Array<number>\r\n  title: string\r\n  stars: number\r\n\r\n  constructor(\r\n    name: string,\r\n    stats: Array<number>,\r\n    title: string,\r\n    stars: number,\r\n  ) {\r\n    this.name = name\r\n    this.stats = stats\r\n    this.title = title\r\n    this.stars = stars\r\n  }\r\n}\r\n\r\nexport const heroes = {\r\n  \"arien\": new Hero(\"Arien\", [8, 5, 4, 4, 2, 6, 5, 5], \"the Tidemaster\", 1),\r\n  \"bain\": new Hero(\"Bain\", [6, 4, 4, 4, 7, 3, 3, 6], \"the Bounty Hunter\", 2),\r\n  \"brogan\": new Hero(\"Brogan\", [6, 8, 2, 2, 1, 7, 6, 6], \"the Destroyer\", 1),\r\n  \"cutter\": new Hero(\"Cutter\", [5, 3, 6, 4, 5, 4, 3, 2], \"the Skycaptain\", 2),\r\n  \"dodger\": new Hero(\"Dodger\", [4, 2, 7, 6, 6, 4, 8, 1], \"the Warlock\", 1),\r\n  \"garrus\": new Hero(\"Garrus\", [7, 7, 3, 4, 4, 7, 1, 3], \"the Gladiator\", 2),\r\n  \"hanu\": new Hero(\"Hanu\", [1, 1, 8, 8, 7, 2, 4, 8], \"the Trickster\", 3),\r\n  \"ignatia\": new Hero(\"Ignatia\", [5, 6, 2, 2, 3, 3, 6, 4], \"the Mad\", 3),\r\n  \"min\": new Hero(\"Min\", [1, 3, 8, 4, 6, 3, 2, 4], \"the Dragonmonk\", 2),\r\n  \"misa\": new Hero(\"Misa\", [8, 5, 7, 7, 4, 5, 6, 5], \"the Sky Ronin\", 2),\r\n  \"nebkher\": new Hero(\"NebKher\", [3, 8, 1, 1, 2, 4, 4, 3], \"the Harbinger\", 3),\r\n  \"sabina\": new Hero(\"Sabina\", [5, 3, 5, 4, 5, 4, 7, 3], \"the Gunslinger\", 1),\r\n  \"silverarrow\": new Hero(\"Silverarrow\", [2, 1, 7, 7, 7, 1, 5, 6], \"the Pathfinder\", 2),\r\n  \"swift\": new Hero(\"Swift\", [7, 3, 4, 6, 4, 2, 5, 1], \"the Sharpshooter\", 3),\r\n  \"tali\": new Hero(\"Tali\", [3, 4, 5, 4, 5, 6, 7, 7], \"the Spiritcaller\", 3),\r\n  \"tigerclaw\": new Hero(\"Tigerclaw\", [2, 2, 8, 8, 6, 3, 3, 2], \"the Cutpurse\", 1),\r\n  \"trinkets\": new Hero(\"Trinkets\", [4, 2, 6, 8, 5, 1, 4, 4], \"the Scavenger\", 3),\r\n  \"ursafar\": new Hero(\"Ursafar\", [8, 6, 5, 1, 4, 8, 2, 1], \"the Savage\", 2),\r\n  \"wasp\": new Hero(\"Wasp\", [4, 4, 5, 4, 3, 5, 4, 5], \"the Warmaiden\", 1),\r\n  \"whisper\": new Hero(\"Whisper\", [4, 4, 7, 2, 8, 5, 2, 2], \"the Outcast\", 2),\r\n  \"wuk\": new Hero(\"Wuk\", [7, 7, 1, 2, 1, 7, 6, 7], \"the Grovekeeper\", 3),\r\n  \"xargatha\": new Hero(\"Xargatha\", [4, 6, 3, 6, 3, 6, 5, 4], \"the Changed\", 1),\r\n}\r\n\r\nexport const cardStats = new Map<Color, Map<Stat, Map<string, number[]>>>([\r\n  [Color.RED, new Map<Stat, Map<string, number[]>>([\r\n    [Stat.MOVEMENT, new Map<string, number[]>([\r\n      [\"i\", [3, 4, 4, 4, 5, 5, 5, 5]],\r\n      [\"ii\", [3, 4, 4, 4, 5, 5, 5, 5]],\r\n      [\"iii\", [3, 4, 4, 4, 5, 5, 5, 5]],\r\n    ])],\r\n    [Stat.INITIATIVE, new Map<string, number[]>([\r\n      [\"i\", [7, 7, 7, 8, 8, 8, 9, 9]],\r\n      [\"ii\", [7, 7, 8, 8, 9, 9, 9, 9]],\r\n      [\"iii\", [8, 8, 8, 9, 9, 9, 10, 10]],\r\n    ])],\r\n    [Stat.ATTACK, new Map<string, number[]>([\r\n      [\"i\", [4, 4, 5, 5, 5, 6, 6, 6]],\r\n      [\"ii\", [4, 5, 5, 5, 6, 6, 6, 7]],\r\n      [\"iii\", [5, 5, 6, 6, 6, 7, 7, 7]],\r\n    ])],\r\n    [Stat.DEFENSE, new Map<string, number[]>([\r\n      [\"i\", [5, 5, 6, 6, 6, 7, 7, 7]],\r\n      [\"ii\", [5, 6, 6, 6, 7, 7, 7, 8]],\r\n      [\"iii\", [6, 6, 7, 7, 7, 8, 8, 8]],\r\n    ])],\r\n  ])],\r\n  [Color.GOLD, new Map<Stat, Map<string, number[]>>([\r\n    [Stat.MOVEMENT, new Map<string, number[]>([\r\n      [\"i\", [1, 1, 1, 1, 1, 1, 2, 2]],\r\n    ])],\r\n    [Stat.INITIATIVE, new Map<string, number[]>([\r\n      [\"i\", [11, 11, 11, 11, 12, 12, 12, 13]],\r\n    ])],\r\n    [Stat.ATTACK, new Map<string, number[]>([\r\n      [\"i\", [1, 2, 2, 3, 3, 3, 4, 4]],\r\n    ])],\r\n    [Stat.DEFENSE, new Map<string, number[]>([\r\n      [\"i\", [1, 1, 2, 2, 2, 2, 3, 3]],\r\n    ])],\r\n  ])],\r\n  [Color.SILVER, new Map<Stat, Map<string, number[]>>([\r\n    [Stat.DEFENSE, new Map<string, number[]>([\r\n      [\"i\", [1, 2, 2, 2, 3, 3, 3, 4]],\r\n    ])],\r\n  ])],\r\n  [Color.BLUE, new Map<Stat, Map<string, number[]>>([\r\n    [Stat.MOVEMENT, new Map<string, number[]>([\r\n      [\"i\", [2, 2, 3, 3, 3, 3, 3, 3]],\r\n      [\"ii\", [2, 2, 3, 3, 3, 3, 3, 3]],\r\n      [\"iii\", [2, 2, 3, 3, 3, 3, 3, 3]],\r\n    ])],\r\n    [Stat.INITIATIVE, new Map<string, number[]>([\r\n      [\"i\", [8, 9, 9, 9, 9, 10, 10, 10]],\r\n      [\"ii\", [9, 9, 10, 10, 10, 10, 10, 11]],\r\n      [\"iii\", [9, 10, 10, 10, 10, 11, 11, 11]],\r\n    ])],\r\n    [Stat.DEFENSE, new Map<string, number[]>([\r\n      [\"i\", [4, 4, 4, 5, 5, 5, 6, 6]],\r\n      [\"ii\", [4, 5, 5, 5, 6, 6, 6, 7]],\r\n      [\"iii\", [5, 5, 5, 6, 6, 6, 7, 7]],\r\n    ])],\r\n  ])],\r\n  [Color.GREEN, new Map<Stat, Map<string, number[]>>([\r\n    [Stat.MOVEMENT, new Map<string, number[]>([\r\n      [\"i\", [2, 2, 2, 2, 2, 2, 2, 3]],\r\n      [\"ii\", [2, 2, 2, 2, 2, 2, 2, 3]],\r\n      [\"iii\", [2, 2, 2, 2, 2, 2, 2, 3]],\r\n    ])],\r\n    [Stat.INITIATIVE, new Map<string, number[]>([\r\n      [\"i\", [6, 5, 5, 4, 4, 3, 3, 2]],\r\n      [\"ii\", [5, 5, 4, 4, 3, 3, 2, 2]],\r\n      [\"iii\", [5, 4, 4, 3, 3, 2, 2, 1]],\r\n    ])],\r\n    [Stat.DEFENSE, new Map<string, number[]>([\r\n      [\"i\", [1, 2, 2, 3, 3, 3, 3, 4]],\r\n      [\"ii\", [2, 2, 3, 3, 3, 4, 4, 4]],\r\n      [\"iii\", [2, 3, 3, 4, 4, 4, 4, 5]],\r\n    ])],\r\n  ])],\r\n])\r\n\r\nexport const stats: Array<string> = [\r\n  \"attack\",\r\n  \"defense\",\r\n  \"initiative\",\r\n  \"movement\",\r\n  \"initiator\",\r\n  \"brawler\",\r\n  \"pusher\",\r\n  \"support\",\r\n]\r\n\r\nexport const defaultEmoji = [\r\n  \"area_blue\",\r\n  \"area_gold\",\r\n  \"area_green\",\r\n  \"area_purple\",\r\n  \"area_red\",\r\n  \"area_silver\",\r\n  \"attack_blue\",\r\n  \"attack_gold\",\r\n  \"attack_green\",\r\n  \"attack_red\",\r\n  \"attack_silver\",\r\n  \"defense_blue\",\r\n  \"defense_gold\",\r\n  \"defense_green\",\r\n  \"defense_red\",\r\n  \"defense_silver\",\r\n  \"defense_skill_blue\",\r\n  \"defense_skill_gold\",\r\n  \"defense_skill_green\",\r\n  \"defense_skill_red\",\r\n  \"defense_skill_silver\",\r\n  \"initiative\",\r\n  \"life_counters\",\r\n  \"marker_bounty\",\r\n  \"marker_poison\",\r\n  \"movement_blue\",\r\n  \"movement_gold\",\r\n  \"movement_green\",\r\n  \"movement_red\",\r\n  \"movement_silver\",\r\n  \"range_blue\",\r\n  \"range_gold\",\r\n  \"range_green\",\r\n  \"range_purple\",\r\n  \"range_red\",\r\n  \"range_silver\",\r\n  \"skill_blue\",\r\n  \"skill_gold\",\r\n  \"skill_green\",\r\n  \"skill_red\",\r\n  \"skill_silver\",\r\n  \"tiebreaker_blue\",\r\n  \"tiebreaker_orange\",\r\n  \"token_magma\",\r\n  \"token_smoke_bomb\",\r\n  \"token_blast\",\r\n  \"token_dud\",\r\n  \"token_grenade\",\r\n  \"token_illusion\",\r\n  \"token_ice\",\r\n  \"token_totem\",\r\n  \"token_barrier\",\r\n  \"token_tree\",\r\n]\r\n\r\nexport const imageNames = [\r\n  \"area_blue\",\r\n  \"area_gold\",\r\n  \"area_green\",\r\n  \"area_purple\",\r\n  \"area_red\",\r\n  \"area_silver\",\r\n  \"attack_blue\",\r\n  \"attack_gold\",\r\n  \"attack_green\",\r\n  \"attack_red\",\r\n  \"attack_silver\",\r\n  \"banner_blue_bottom\",\r\n  \"banner_blue_top\",\r\n  \"banner_gold_bottom\",\r\n  \"banner_gold_top\",\r\n  \"banner_green_bottom\",\r\n  \"banner_green_top\",\r\n  \"banner_red_bottom\",\r\n  \"banner_red_top\",\r\n  \"banner_silver_bottom\",\r\n  \"banner_silver_top\",\r\n  \"bottom_long\",\r\n  \"bottom_short\",\r\n  \"colorblind_blue\",\r\n  \"colorblind_gold\",\r\n  \"colorblind_green\",\r\n  \"colorblind_purple\",\r\n  \"colorblind_red\",\r\n  \"colorblind_silver\",\r\n  \"defense\",\r\n  \"defense_blue\",\r\n  \"defense_gold\",\r\n  \"defense_green\",\r\n  \"defense_red\",\r\n  \"defense_silver\",\r\n  \"defense_skill_blue\",\r\n  \"defense_skill_gold\",\r\n  \"defense_skill_green\",\r\n  \"defense_skill_red\",\r\n  \"defense_skill_silver\",\r\n  \"frame_blue_bottom\",\r\n  \"frame_blue_middle\",\r\n  \"frame_blue_middle_cut\",\r\n  \"frame_blue_top\",\r\n  \"frame_empty_bottom\",\r\n  \"frame_gold_bottom\",\r\n  \"frame_gold_middle\",\r\n  \"frame_gold_top\",\r\n  \"frame_green_bottom\",\r\n  \"frame_green_middle\",\r\n  \"frame_green_middle_cut\",\r\n  \"frame_green_top\",\r\n  \"frame_purple_bottom\",\r\n  \"frame_purple_middle\",\r\n  \"frame_purple_top\",\r\n  \"frame_red_bottom\",\r\n  \"frame_red_middle\",\r\n  \"frame_red_middle_cut\",\r\n  \"frame_red_top\",\r\n  \"frame_silver_bottom\",\r\n  \"frame_silver_middle\",\r\n  \"frame_silver_top\",\r\n  \"initiative\",\r\n  \"item_area\",\r\n  \"item_attack\",\r\n  \"item_defense\",\r\n  \"item_initiative\",\r\n  \"item_movement\",\r\n  \"item_range\",\r\n  \"level_i\",\r\n  \"level_ii\",\r\n  \"level_iii\",\r\n  \"level_iv\",\r\n  \"level_h\",\r\n  \"life_counters\",\r\n  \"marker_bounty\",\r\n  \"marker_poison\",\r\n  \"movement\",\r\n  \"movement_blue\",\r\n  \"movement_gold\",\r\n  \"movement_green\",\r\n  \"movement_red\",\r\n  \"movement_silver\",\r\n  \"range_blue\",\r\n  \"range_gold\",\r\n  \"range_green\",\r\n  \"range_purple\",\r\n  \"range_red\",\r\n  \"range_silver\",\r\n  \"skill_blue\",\r\n  \"skill_gold\",\r\n  \"skill_green\",\r\n  \"skill_red\",\r\n  \"skill_silver\",\r\n  \"tiebreaker_blue\",\r\n  \"tiebreaker_orange\",\r\n  \"title\",\r\n  \"title_ultimate\",\r\n  \"token_magma\",\r\n  \"token_smoke_bomb\",\r\n  \"token_blast\",\r\n  \"token_dud\",\r\n  \"token_grenade\",\r\n  \"token_illusion\",\r\n  \"token_ice\",\r\n  \"token_totem\",\r\n  \"token_barrier\",\r\n  \"token_tree\",\r\n]\r\n\r\nexport const cardImageNames = [\r\n  \"BlueIA\",\r\n  \"BlueIIA\",\r\n  \"BlueIIB\",\r\n  \"BlueIIIA\",\r\n  \"BlueIIIB\",\r\n  \"Gold\",\r\n  \"GreenIA\",\r\n  \"GreenIIA\",\r\n  \"GreenIIB\",\r\n  \"GreenIIIA\",\r\n  \"GreenIIIB\",\r\n  \"Handicap\",\r\n  \"RedIA\",\r\n  \"RedIIA\",\r\n  \"RedIIB\",\r\n  \"RedIIIA\",\r\n  \"RedIIIB\",\r\n  \"Silver\",\r\n  \"Ultimate\",\r\n]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/states.ts b/src/states.ts
--- a/src/states.ts	(revision 9242ac5b6636b479f8dbecbabce62dbe4675670a)
+++ b/src/states.ts	(date 1716067385822)
@@ -345,23 +345,23 @@
 ]
 
 export const cardImageNames = [
-  "BlueIA",
-  "BlueIIA",
-  "BlueIIB",
-  "BlueIIIA",
-  "BlueIIIB",
+  "Blue1a",
+  "Blue2a",
+  "Blue2b",
+  "Blue3a",
+  "Blue3b",
   "Gold",
-  "GreenIA",
-  "GreenIIA",
-  "GreenIIB",
-  "GreenIIIA",
-  "GreenIIIB",
+  "Green1a",
+  "Green2a",
+  "Green2b",
+  "Green3a",
+  "Green3b",
   "Handicap",
-  "RedIA",
-  "RedIIA",
-  "RedIIB",
-  "RedIIIA",
-  "RedIIIB",
+  "Red1a",
+  "Red2a",
+  "Red2b",
+  "Red3a",
+  "Red3b",
   "Silver",
-  "Ultimate",
+  "Purple",
 ]
Index: src/routes/[hero]/CardGrid.svelte
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><script lang=\"ts\">\r\n  import { onMount } from \"svelte\"\r\n  import { Color, Hero, heroes, Item, Modifier, stats, Type, ValueSign } from \"../../states\"\r\n  import { images, importCardImage, importCardImages, importImages, updateCanvas } from \"../../card_painter\"\r\n  import heroInfo from \"../../heroes.json\"\r\n  import BiggerPicture from \"bigger-picture/svelte\"\r\n  import \"bigger-picture/css\"\r\n  import GoaCard from \"./GoaCard.svelte\"\r\n  import type { BiggerPictureInstance } from \"bigger-picture\"\r\n  import { Checkbox, Img, Tooltip } from \"flowbite-svelte\"\r\n\r\n  export let heroName: string\r\n\r\n  let gold: HTMLCanvasElement\r\n  let goldCtx: CanvasRenderingContext2D\r\n  let goldBg: HTMLImageElement | undefined\r\n  let handicapBg: HTMLImageElement | undefined\r\n\r\n  let silver: HTMLCanvasElement\r\n  let silverCtx: CanvasRenderingContext2D\r\n  let silverBg: HTMLImageElement | undefined\r\n\r\n  let purple: HTMLCanvasElement\r\n  let purpleCtx: CanvasRenderingContext2D\r\n  let purpleBg: HTMLImageElement | undefined\r\n\r\n  let blueIa: HTMLCanvasElement\r\n  let blueIaCtx: CanvasRenderingContext2D\r\n  let blueIaBg: HTMLImageElement | undefined\r\n\r\n  let redIa: HTMLCanvasElement\r\n  let redIaCtx: CanvasRenderingContext2D\r\n  let redIaBg: HTMLImageElement | undefined\r\n\r\n  let greenIa: HTMLCanvasElement\r\n  let greenIaCtx: CanvasRenderingContext2D\r\n  let greenIaBg: HTMLImageElement | undefined\r\n\r\n  let blueIIa: HTMLCanvasElement\r\n  let blueIIaCtx: CanvasRenderingContext2D\r\n  let blueIIaBg: HTMLImageElement | undefined\r\n\r\n  let blueIIb: HTMLCanvasElement\r\n  let blueIIbCtx: CanvasRenderingContext2D\r\n  let blueIIbBg: HTMLImageElement | undefined\r\n\r\n  let redIIa: HTMLCanvasElement\r\n  let redIIaCtx: CanvasRenderingContext2D\r\n  let redIIaBg: HTMLImageElement | undefined\r\n\r\n  let redIIb: HTMLCanvasElement\r\n  let redIIbCtx: CanvasRenderingContext2D\r\n  let redIIbBg: HTMLImageElement | undefined\r\n\r\n  let greenIIa: HTMLCanvasElement\r\n  let greenIIaCtx: CanvasRenderingContext2D\r\n  let greenIIaBg: HTMLImageElement | undefined\r\n\r\n  let greenIIb: HTMLCanvasElement\r\n  let greenIIbCtx: CanvasRenderingContext2D\r\n  let greenIIbBg: HTMLImageElement | undefined\r\n\r\n  let blueIIIa: HTMLCanvasElement\r\n  let blueIIIaCtx: CanvasRenderingContext2D\r\n  let blueIIIaBg: HTMLImageElement | undefined\r\n\r\n  let blueIIIb: HTMLCanvasElement\r\n  let blueIIIbCtx: CanvasRenderingContext2D\r\n  let blueIIIbBg: HTMLImageElement | undefined\r\n\r\n  let redIIIa: HTMLCanvasElement\r\n  let redIIIaCtx: CanvasRenderingContext2D\r\n  let redIIIaBg: HTMLImageElement | undefined\r\n\r\n  let redIIIb: HTMLCanvasElement\r\n  let redIIIbCtx: CanvasRenderingContext2D\r\n  let redIIIbBg: HTMLImageElement | undefined\r\n\r\n  let greenIIIa: HTMLCanvasElement\r\n  let greenIIIaCtx: CanvasRenderingContext2D\r\n  let greenIIIaBg: HTMLImageElement | undefined\r\n\r\n  let greenIIIb: HTMLCanvasElement\r\n  let greenIIIbCtx: CanvasRenderingContext2D\r\n  let greenIIIbBg: HTMLImageElement | undefined\r\n\r\n  let imagesLoaded = false\r\n\r\n  let goldLoaded = false\r\n  let goldHandicapLoaded = false\r\n  let silverLoaded = false\r\n  let purpleLoaded = false\r\n  let blueIaLoaded = false\r\n  let redIaLoaded = false\r\n  let greenIaLoaded = false\r\n  let blueIIaLoaded = false\r\n  let redIIaLoaded = false\r\n  let greenIIaLoaded = false\r\n  let blueIIbLoaded = false\r\n  let redIIbLoaded = false\r\n  let greenIIbLoaded = false\r\n  let blueIIIaLoaded = false\r\n  let redIIIaLoaded = false\r\n  let greenIIIaLoaded = false\r\n  let blueIIIbLoaded = false\r\n  let redIIIbLoaded = false\r\n  let greenIIIbLoaded = false\r\n\r\n  let blueIIalt = false\r\n  let redIIalt = false\r\n  let greenIIalt = false\r\n  let blueIIIalt = false\r\n  let redIIIalt = false\r\n  let greenIIIalt = false\r\n\r\n  $: hoverOverBlueII = false\r\n  $: hoverOverRedII = false\r\n  $: hoverOverGreenII = false\r\n  $: hoverOverBlueIII = false\r\n  $: hoverOverRedIII = false\r\n  $: hoverOverGreenIII = false\r\n\r\n  let goldCard: any\r\n  let goldHandicapCard: any\r\n  let silverCard: any\r\n  let purpleCard: any\r\n  let blueIaCard: any\r\n  let redIaCard: any\r\n  let greenIaCard: any\r\n  let blueIIaCard: any\r\n  let redIIaCard: any\r\n  let greenIIaCard: any\r\n  let blueIIbCard: any\r\n  let redIIbCard: any\r\n  let greenIIbCard: any\r\n  let blueIIIaCard: any\r\n  let redIIIaCard: any\r\n  let greenIIIaCard: any\r\n  let blueIIIbCard: any\r\n  let redIIIbCard: any\r\n  let greenIIIbCard: any\r\n\r\n  let initiativeBonus: number = 0\r\n  let attackBonus: number = 0\r\n  let defenseBonus: number = 0\r\n  let areaBonus: number = 0\r\n  let rangeBonus: number = 0\r\n  let movementBonus: number = 0\r\n\r\n  let blueIIaltChecked = false\r\n  let blueIImainChecked = false\r\n  let redIIaltChecked = false\r\n  let redIImainChecked = false\r\n  let greenIIaltChecked = false\r\n  let greenIImainChecked = false\r\n  let blueIIIaltChecked = false\r\n  let blueIIImainChecked = false\r\n  let redIIIaltChecked = false\r\n  let redIIImainChecked = false\r\n  let greenIIIaltChecked = false\r\n  let greenIIImainChecked = false\r\n\r\n  function checkBlueIIalt(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      blueIImainChecked = false\r\n    }\r\n  }\r\n\r\n  function checkBlueIImain(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      blueIIaltChecked = false\r\n    }\r\n  }\r\n\r\n  function checkRedIIalt(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      redIImainChecked = false\r\n    }\r\n  }\r\n\r\n  function checkRedIImain(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      redIIaltChecked = false\r\n    }\r\n  }\r\n\r\n  function checkGreenIIalt(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      greenIImainChecked = false\r\n    }\r\n  }\r\n\r\n  function checkGreenIImain(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      greenIIaltChecked = false\r\n    }\r\n  }\r\n\r\n  function checkBlueIIIalt(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      blueIIImainChecked = false\r\n    }\r\n  }\r\n\r\n  function checkBlueIIImain(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      blueIIIaltChecked = false\r\n    }\r\n  }\r\n\r\n  function checkRedIIIalt(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      redIIImainChecked = false\r\n    }\r\n  }\r\n\r\n  function checkRedIIImain(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      redIIIaltChecked = false\r\n    }\r\n  }\r\n\r\n  function checkGreenIIIalt(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      greenIIImainChecked = false\r\n    }\r\n  }\r\n\r\n  function checkGreenIIImain(e: Event) {\r\n    if ((e.target as unknown as EventTarget & { checked: boolean }).checked) {\r\n      greenIIIaltChecked = false\r\n    }\r\n  }\r\n\r\n  $: {\r\n    blueIIaltChecked\r\n    blueIImainChecked\r\n    redIIaltChecked\r\n    redIImainChecked\r\n    greenIIaltChecked\r\n    greenIImainChecked\r\n    blueIIIaltChecked\r\n    blueIIImainChecked\r\n    redIIIaltChecked\r\n    redIIImainChecked\r\n    greenIIIaltChecked\r\n    greenIIImainChecked\r\n    showNumbers\r\n    showHandicap\r\n\r\n    goldLoaded\r\n    goldHandicapLoaded\r\n    silverLoaded\r\n    purpleLoaded\r\n    blueIaLoaded\r\n    redIaLoaded\r\n    greenIaLoaded\r\n    blueIIaLoaded\r\n    redIIaLoaded\r\n    greenIIaLoaded\r\n    blueIIbLoaded\r\n    redIIbLoaded\r\n    greenIIbLoaded\r\n    blueIIIaLoaded\r\n    redIIIaLoaded\r\n    greenIIIaLoaded\r\n    blueIIIbLoaded\r\n    redIIIbLoaded\r\n    greenIIIbLoaded\r\n\r\n    let blueIIselection = blueIImainChecked ? true : (blueIIaltChecked ? false : null)\r\n    let redIIselection = redIImainChecked ? true : (redIIaltChecked ? false : null)\r\n    let greenIIselection = greenIImainChecked ? true : (greenIIaltChecked ? false : null)\r\n    let blueIIIselection = blueIIImainChecked ? true : (blueIIIaltChecked ? false : null)\r\n    let redIIIselection = redIIImainChecked ? true : (redIIIaltChecked ? false : null)\r\n    let greenIIIselection = greenIIImainChecked ? true : (greenIIIaltChecked ? false : null)\r\n\r\n    const bonuses: { [item: string] : number } = {}\r\n    bonuses[Item.INITIATIVE] = 0\r\n    bonuses[Item.ATTACK] = 0\r\n    bonuses[Item.DEFENSE] = 0\r\n    bonuses[Item.AREA] = 0\r\n    bonuses[Item.RANGE] = 0\r\n    bonuses[Item.MOVEMENT] = 0\r\n\r\n    if (blueIIselection === true) {\r\n      bonuses[blueIIbCard.item] += 1\r\n    }\r\n\r\n    if (blueIIselection === false) {\r\n      bonuses[blueIIaCard.item] += 1\r\n    }\r\n\r\n    if (redIIselection === true) {\r\n      bonuses[redIIbCard.item] += 1\r\n    }\r\n\r\n    if (redIIselection === false) {\r\n      bonuses[redIIaCard.item] += 1\r\n    }\r\n\r\n    if (greenIIselection === true) {\r\n      bonuses[greenIIbCard.item] += 1\r\n    }\r\n\r\n    if (greenIIselection === false) {\r\n      bonuses[greenIIaCard.item] += 1\r\n    }\r\n    \r\n    if (blueIIIselection === true) {\r\n      bonuses[blueIIIbCard.item] += 1\r\n    }\r\n\r\n    if (blueIIIselection === false) {\r\n      bonuses[blueIIIaCard.item] += 1\r\n    }\r\n    \r\n    if (redIIIselection === true) {\r\n      bonuses[redIIIbCard.item] += 1\r\n    }\r\n\r\n    if (redIIIselection === false) {\r\n      bonuses[redIIIaCard.item] += 1\r\n    }\r\n\r\n    if (greenIIIselection === true) {\r\n      bonuses[greenIIIbCard.item] += 1\r\n    }\r\n\r\n    if (greenIIIselection === false) {\r\n      bonuses[greenIIIaCard.item] += 1\r\n    }\r\n\r\n    initiativeBonus = bonuses[Item.INITIATIVE]\r\n    attackBonus = bonuses[Item.ATTACK]\r\n    defenseBonus = bonuses[Item.DEFENSE]\r\n    areaBonus = bonuses[Item.AREA]\r\n    rangeBonus = bonuses[Item.RANGE]\r\n    movementBonus = bonuses[Item.MOVEMENT]\r\n\r\n    if (imagesLoaded && goldLoaded && goldHandicapLoaded)\r\n      updateCard(\r\n        gold,\r\n        goldCtx,\r\n        showHandicap ? goldHandicapCard : goldCard,\r\n        showHandicap ? handicapBg! : goldBg!,\r\n      )\r\n    if (imagesLoaded && silverLoaded)\r\n      updateCard(\r\n        silver,\r\n        silverCtx,\r\n        silverCard,\r\n        silverBg!,\r\n      )\r\n    if (imagesLoaded && purpleLoaded)\r\n      updateCard(\r\n        purple,\r\n        purpleCtx,\r\n        purpleCard,\r\n        purpleBg!,\r\n      )\r\n    if (imagesLoaded && blueIaLoaded)\r\n      updateCard(\r\n        blueIa,\r\n        blueIaCtx,\r\n        blueIaCard,\r\n        blueIaBg!,\r\n      )\r\n    if (imagesLoaded && redIaLoaded)\r\n      updateCard(\r\n        redIa,\r\n        redIaCtx,\r\n        redIaCard,\r\n        redIaBg!,\r\n      )\r\n    if (imagesLoaded && greenIaLoaded)\r\n      updateCard(\r\n        greenIa,\r\n        greenIaCtx,\r\n        greenIaCard,\r\n        greenIaBg!,\r\n      )\r\n    if (imagesLoaded && blueIIaLoaded)\r\n      updateCard(\r\n        blueIIa,\r\n        blueIIaCtx,\r\n        blueIIaCard,\r\n        blueIIaBg!,\r\n      )\r\n    if (imagesLoaded && redIIaLoaded)\r\n      updateCard(\r\n        redIIa,\r\n        redIIaCtx,\r\n        redIIaCard,\r\n        redIIaBg!,\r\n      )\r\n    if (imagesLoaded && greenIIaLoaded)\r\n      updateCard(\r\n        greenIIa,\r\n        greenIIaCtx,\r\n        greenIIaCard,\r\n        greenIIaBg!,\r\n      )\r\n    if (imagesLoaded && blueIIbLoaded)\r\n      updateCard(\r\n        blueIIb,\r\n        blueIIbCtx,\r\n        blueIIbCard,\r\n        blueIIbBg!,\r\n      )\r\n    if (imagesLoaded && redIIbLoaded)\r\n      updateCard(\r\n        redIIb,\r\n        redIIbCtx,\r\n        redIIbCard,\r\n        redIIbBg!,\r\n      )\r\n    if (imagesLoaded && greenIIbLoaded)\r\n      updateCard(\r\n        greenIIb,\r\n        greenIIbCtx,\r\n        greenIIbCard,\r\n        greenIIbBg!,\r\n      )\r\n    if (imagesLoaded && blueIIIaLoaded)\r\n      updateCard(\r\n        blueIIIa,\r\n        blueIIIaCtx,\r\n        blueIIIaCard,\r\n        blueIIIaBg!,\r\n      )\r\n    if (imagesLoaded && redIIIaLoaded)\r\n      updateCard(\r\n        redIIIa,\r\n        redIIIaCtx,\r\n        redIIIaCard,\r\n        redIIIaBg!,\r\n      )\r\n    if (imagesLoaded && greenIIIaLoaded)\r\n      updateCard(\r\n        greenIIIa,\r\n        greenIIIaCtx,\r\n        greenIIIaCard,\r\n        greenIIIaBg!,\r\n      )\r\n    if (imagesLoaded && blueIIIbLoaded)\r\n      updateCard(\r\n        blueIIIb,\r\n        blueIIIbCtx,\r\n        blueIIIbCard,\r\n        blueIIIbBg!,\r\n      )\r\n    if (imagesLoaded && redIIIbLoaded)\r\n      updateCard(\r\n        redIIIb,\r\n        redIIIbCtx,\r\n        redIIIbCard,\r\n        redIIIbBg!,\r\n      )\r\n    if (imagesLoaded && greenIIIbLoaded)\r\n      updateCard(\r\n        greenIIIb,\r\n        greenIIIbCtx,\r\n        greenIIIbCard,\r\n        greenIIIbBg!,\r\n      )\r\n  }\r\n\r\n  $: showNumbers = false\r\n  $: showHandicap = false\r\n\r\n  const labelColor = (disabled: boolean): string => disabled ? \"gray\" : \"white\"\r\n\r\n  $: disableShowNumbers = true\r\n\r\n  const hero = heroes[heroName] as Hero\r\n  const fullName = hero.name + \" \" + hero.title\r\n\r\n  function updateCard(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D, card: any, image: HTMLImageElement) {\r\n    updateCanvas(\r\n      canvas,\r\n      context,\r\n      [],\r\n      image,\r\n      card.color ?? Color.GOLD,\r\n      card.handicapped ?? false,\r\n      card.name ?? \"\",\r\n      card.description ?? \"\",\r\n      \"i\".repeat(card.level ?? 1),\r\n      card.item ?? Item.ATTACK,\r\n      card.initiative ?? 0,\r\n      card.primaryAction ?? Type.ATTACK,\r\n      card.primaryValue ?? 0,\r\n      card.primaryValueSign ?? ValueSign.NONE,\r\n      card.modifier ?? Modifier.NONE,\r\n      card.modifierValue ?? 0,\r\n      card.modifierValueSign ?? ValueSign.NONE,\r\n      card.secondaryMovement ?? 0,\r\n      card.secondaryDefense ?? 0,\r\n      initiativeBonus,\r\n      attackBonus,\r\n      defenseBonus,\r\n      areaBonus,\r\n      rangeBonus,\r\n      movementBonus,\r\n      showNumbers,\r\n      hero.stats[0],\r\n      hero.stats[1],\r\n      hero.stats[2],\r\n      hero.stats[3],\r\n    )\r\n  }\r\n\r\n  let bp: BiggerPictureInstance\r\n\r\n  let banner: any\r\n\r\n  $: statImages = new Map()\r\n\r\n  onMount(async () => {\r\n    banner = (await import(`../../lib/images/avatars_full/${heroName}.png`)).default\r\n\r\n    for (const stat of stats) {\r\n      statImages.set(stat, (await import(`../../lib/images/stat_icons/${stat}_white.png`)).default)\r\n    }\r\n    statImages = statImages\r\n\r\n    goldCtx = gold.getContext('2d')!\r\n    silverCtx = silver.getContext('2d')!\r\n    purpleCtx = purple.getContext('2d')!\r\n    blueIaCtx = blueIa.getContext('2d')!\r\n    redIaCtx = redIa.getContext('2d')!\r\n    greenIaCtx = greenIa.getContext('2d')!\r\n    blueIIaCtx = blueIIa.getContext('2d')!\r\n    blueIIbCtx = blueIIb.getContext('2d')!\r\n    redIIaCtx = redIIa.getContext('2d')!\r\n    redIIbCtx = redIIb.getContext('2d')!\r\n    greenIIaCtx = greenIIa.getContext('2d')!\r\n    greenIIbCtx = greenIIb.getContext('2d')!\r\n    blueIIIaCtx = blueIIIa.getContext('2d')!\r\n    blueIIIbCtx = blueIIIb.getContext('2d')!\r\n    redIIIaCtx = redIIIa.getContext('2d')!\r\n    redIIIbCtx = redIIIb.getContext('2d')!\r\n    greenIIIaCtx = greenIIIa.getContext('2d')!\r\n    greenIIIbCtx = greenIIIb.getContext('2d')!\r\n\r\n    Promise.all([\r\n      document.fonts.ready,\r\n      importImages(),\r\n    ])\r\n      .then(() => {\r\n        imagesLoaded = true\r\n\r\n        const hero = heroInfo[heroName as keyof typeof heroInfo] as {\r\n          name?: string,\r\n          description?: string,\r\n          color?: Color,\r\n          handicapped?: boolean,\r\n          level?: number,\r\n          variant?: { first: number, second: number },\r\n          initiative?: number,\r\n          primaryAction?: Type,\r\n          primaryValue?: number,\r\n          primaryValueSign?: ValueSign,\r\n          modifier?: Modifier,\r\n          modifierValue?: number,\r\n          modifierValueSign?: ValueSign,\r\n          secondaryMovement?: number,\r\n          secondaryDefense?: number,\r\n          item?: Item,\r\n        }[]\r\n        goldCard = hero.find((card) => card.color == Color.GOLD.toUpperCase())!\r\n        goldHandicapCard = hero.find((card) => card.color == Color.GOLD.toUpperCase() && card.handicapped)!\r\n        silverCard = hero.find((card) => card.color == Color.SILVER.toUpperCase())!\r\n        purpleCard = hero.find((card) => card.color == Color.PURPLE.toUpperCase())!\r\n        blueIaCard = hero.find((card) => card.color == Color.BLUE.toUpperCase() && card.level == 1)!\r\n        redIaCard = hero.find((card) => card.color == Color.RED.toUpperCase() && card.level == 1)!\r\n        greenIaCard = hero.find((card) => card.color == Color.GREEN.toUpperCase() && card.level == 1)!\r\n        blueIIaCard = hero.find((card) => card.color == Color.BLUE.toUpperCase() && card.level == 2 && card.variant?.first == 1)!\r\n        redIIaCard = hero.find((card) => card.color == Color.RED.toUpperCase() && card.level == 2 && card.variant?.first == 1)!\r\n        greenIIaCard = hero.find((card) => card.color == Color.GREEN.toUpperCase() && card.level == 2 && card.variant?.first == 1)!\r\n        blueIIbCard = hero.find((card) => card.color == Color.BLUE.toUpperCase() && card.level == 2 && card.variant?.first == 2)!\r\n        redIIbCard = hero.find((card) => card.color == Color.RED.toUpperCase() && card.level == 2 && card.variant?.first == 2)!\r\n        greenIIbCard = hero.find((card) => card.color == Color.GREEN.toUpperCase() && card.level == 2 && card.variant?.first == 2)!\r\n        blueIIIaCard = hero.find((card) => card.color == Color.BLUE.toUpperCase() && card.level == 3 && card.variant?.first == 1)!\r\n        redIIIaCard = hero.find((card) => card.color == Color.RED.toUpperCase() && card.level == 3 && card.variant?.first == 1)!\r\n        greenIIIaCard = hero.find((card) => card.color == Color.GREEN.toUpperCase() && card.level == 3 && card.variant?.first == 1)!\r\n        blueIIIbCard = hero.find((card) => card.color == Color.BLUE.toUpperCase() && card.level == 3 && card.variant?.first == 2)!\r\n        redIIIbCard = hero.find((card) => card.color == Color.RED.toUpperCase() && card.level == 3 && card.variant?.first == 2)!\r\n        greenIIIbCard = hero.find((card) => card.color == Color.GREEN.toUpperCase() && card.level == 3 && card.variant?.first == 2)!\r\n\r\n        if (goldLoaded && goldHandicapLoaded)\r\n          updateCard(\r\n            gold,\r\n            goldCtx,\r\n            showHandicap ? goldHandicapCard : goldCard,\r\n            showHandicap ? handicapBg! : goldBg!,\r\n          )\r\n        if (silverLoaded)\r\n          updateCard(\r\n            silver,\r\n            silverCtx,\r\n            silverCard,\r\n            silverBg!,\r\n          )\r\n        if (purpleLoaded)\r\n          updateCard(\r\n            purple,\r\n            purpleCtx,\r\n            purpleCard,\r\n            purpleBg!,\r\n          )\r\n        if (blueIaLoaded)\r\n          updateCard(\r\n            blueIa,\r\n            blueIaCtx,\r\n            blueIaCard,\r\n            blueIaBg!,\r\n          )\r\n        if (redIaLoaded)\r\n          updateCard(\r\n            redIa,\r\n            redIaCtx,\r\n            redIaCard,\r\n            redIaBg!,\r\n          )\r\n        if (greenIaLoaded)\r\n          updateCard(\r\n            greenIa,\r\n            greenIaCtx,\r\n            greenIaCard,\r\n            greenIaBg!,\r\n          )\r\n        if (blueIIaLoaded)\r\n          updateCard(\r\n            blueIIa,\r\n            blueIIaCtx,\r\n            blueIIaCard,\r\n            blueIIaBg!,\r\n          )\r\n        if (redIIaLoaded)\r\n          updateCard(\r\n            redIIa,\r\n            redIIaCtx,\r\n            redIIaCard,\r\n            redIIaBg!,\r\n          )\r\n        if (greenIIaLoaded)\r\n          updateCard(\r\n            greenIIa,\r\n            greenIIaCtx,\r\n            greenIIaCard,\r\n            greenIIaBg!,\r\n          )\r\n        if (blueIIbLoaded)\r\n          updateCard(\r\n            blueIIb,\r\n            blueIIbCtx,\r\n            blueIIbCard,\r\n            blueIIbBg!,\r\n          )\r\n        if (redIIbLoaded)\r\n          updateCard(\r\n            redIIb,\r\n            redIIbCtx,\r\n            redIIbCard,\r\n            redIIbBg!,\r\n          )\r\n        if (greenIIbLoaded)\r\n          updateCard(\r\n            greenIIb,\r\n            greenIIbCtx,\r\n            greenIIbCard,\r\n            greenIIbBg!,\r\n          )\r\n        if (blueIIIaLoaded)\r\n          updateCard(\r\n            blueIIIa,\r\n            blueIIIaCtx,\r\n            blueIIIaCard,\r\n            blueIIIaBg!,\r\n          )\r\n        if (redIIIaLoaded)\r\n          updateCard(\r\n            redIIIa,\r\n            redIIIaCtx,\r\n            redIIIaCard,\r\n            redIIIaBg!,\r\n          )\r\n        if (greenIIIaLoaded)\r\n          updateCard(\r\n            greenIIIa,\r\n            greenIIIaCtx,\r\n            greenIIIaCard,\r\n            greenIIIaBg!,\r\n          )\r\n        if (blueIIIbLoaded)\r\n          updateCard(\r\n            blueIIIb,\r\n            blueIIIbCtx,\r\n            blueIIIbCard,\r\n            blueIIIbBg!,\r\n          )\r\n        if (redIIIbLoaded)\r\n          updateCard(\r\n            redIIIb,\r\n            redIIIbCtx,\r\n            redIIIbCard,\r\n            redIIIbBg!,\r\n          )\r\n        if (greenIIIbLoaded)\r\n          updateCard(\r\n            greenIIIb,\r\n            greenIIIbCtx,\r\n            greenIIIbCard,\r\n            greenIIIbBg!,\r\n          )\r\n      })\r\n\r\n    importCardImage(heroName, \"BlueIA\").then(() => {\r\n      blueIaBg = images.get(\"BlueIA\")\r\n      blueIaLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"BlueIIA\").then(() => {\r\n      blueIIaBg = images.get(\"BlueIIA\")\r\n      blueIIaLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"BlueIIB\").then(() => {\r\n      blueIIbBg = images.get(\"BlueIIB\")\r\n      blueIIbLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"BlueIIIA\").then(() => {\r\n      blueIIIaBg = images.get(\"BlueIIIA\")\r\n      blueIIIaLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"BlueIIIA\").then(() => {\r\n      blueIIIaBg = images.get(\"BlueIIIA\")\r\n      blueIIIaLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"BlueIIIB\").then(() => {\r\n      blueIIIbBg = images.get(\"BlueIIIB\")\r\n      blueIIIbLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"Gold\").then(() => {\r\n      goldBg = images.get(\"Gold\")\r\n      goldLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"GreenIA\").then(() => {\r\n      greenIaBg = images.get(\"GreenIA\")\r\n      greenIaLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"GreenIIA\").then(() => {\r\n      greenIIaBg = images.get(\"GreenIIA\")\r\n      greenIIaLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"GreenIIB\").then(() => {\r\n      greenIIbBg = images.get(\"GreenIIB\")\r\n      greenIIbLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"GreenIIIA\").then(() => {\r\n      greenIIIaBg = images.get(\"GreenIIIA\")\r\n      greenIIIaLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"GreenIIIB\").then(() => {\r\n      greenIIIbBg = images.get(\"GreenIIIB\")\r\n      greenIIIbLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"Handicap\").then(() => {\r\n      handicapBg = images.get(\"Handicap\")\r\n      goldHandicapLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"RedIA\").then(() => {\r\n      redIaBg = images.get(\"RedIA\")\r\n      redIaLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"RedIIA\").then(() => {\r\n      redIIaBg = images.get(\"RedIIA\")\r\n      redIIaLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"RedIIB\").then(() => {\r\n      redIIbBg = images.get(\"RedIIB\")\r\n      redIIbLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"RedIIIA\").then(() => {\r\n      redIIIaBg = images.get(\"RedIIIA\")\r\n      redIIIaLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"RedIIIB\").then(() => {\r\n      redIIIbBg = images.get(\"RedIIIB\")\r\n      redIIIbLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"Silver\").then(() => {\r\n      silverBg = images.get(\"Silver\")\r\n      silverLoaded = true\r\n    })\r\n\r\n    importCardImage(heroName, \"Ultimate\").then(() => {\r\n      purpleBg = images.get(\"Ultimate\")\r\n      purpleLoaded = true\r\n    })\r\n\r\n    bp = BiggerPicture({\r\n      target: document.body\r\n    })\r\n  })\r\n\r\n  function goldClick() {\r\n    bp.open({\r\n      intro: \"fadeup\",\r\n      items: [{ html: \"\" }],\r\n      onOpen: (container) => {\r\n        let card = new GoaCard({\r\n          target: container.querySelector(\".bp-html\") as Element,\r\n          props: { bp }\r\n        });\r\n        card.drawCard(document.getElementById(\"goldCanvas\")! as HTMLCanvasElement)\r\n      },\r\n    })\r\n  }\r\n\r\n  function silverClick() {\r\n    bp.open({\r\n      intro: \"fadeup\",\r\n      items: [{ html: \"\" }],\r\n      onOpen: (container) => {\r\n        let card = new GoaCard({\r\n          target: container.querySelector(\".bp-html\") as Element,\r\n          props: { bp }\r\n        });\r\n        card.drawCard(document.getElementById(\"silverCanvas\")! as HTMLCanvasElement)\r\n      },\r\n    })\r\n  }\r\n\r\n  function purpleClick() {\r\n    bp.open({\r\n      intro: \"fadeup\",\r\n      items: [{ html: \"\" }],\r\n      onOpen: (container) => {\r\n        let card = new GoaCard({\r\n          target: container.querySelector(\".bp-html\") as Element,\r\n          props: { bp }\r\n        });\r\n        card.drawCard(document.getElementById(\"purpleCanvas\")! as HTMLCanvasElement)\r\n      },\r\n    })\r\n  }\r\n\r\n  function blueIClick() {\r\n    bp.open({\r\n      intro: \"fadeup\",\r\n      items: [{ html: \"\" }],\r\n      onOpen: (container) => {\r\n        let card = new GoaCard({\r\n          target: container.querySelector(\".bp-html\") as Element,\r\n          props: { bp }\r\n        });\r\n        card.drawCard(document.getElementById(\"blueICanvas\")! as HTMLCanvasElement)\r\n      },\r\n    })\r\n  }\r\n\r\n  function redIClick() {\r\n    bp.open({\r\n      intro: \"fadeup\",\r\n      items: [{ html: \"\" }],\r\n      onOpen: (container) => {\r\n        let card = new GoaCard({\r\n          target: container.querySelector(\".bp-html\") as Element,\r\n          props: { bp }\r\n        });\r\n        card.drawCard(document.getElementById(\"redICanvas\")! as HTMLCanvasElement)\r\n      },\r\n    })\r\n  }\r\n\r\n  function greenIClick() {\r\n    bp.open({\r\n      intro: \"fadeup\",\r\n      items: [{ html: \"\" }],\r\n      onOpen: (container) => {\r\n        let card = new GoaCard({\r\n          target: container.querySelector(\".bp-html\") as Element,\r\n          props: { bp }\r\n        });\r\n        card.drawCard(document.getElementById(\"greenICanvas\")! as HTMLCanvasElement)\r\n      },\r\n    })\r\n  }\r\n\r\n  function blueIImainPointerEnter() {\r\n    if (blueIIalt)\r\n      hoverOverBlueII = true\r\n  }\r\n\r\n  function blueIImainPointerLeave() {\r\n    if (blueIIalt)\r\n      hoverOverBlueII = false\r\n  }\r\n\r\n  function blueIIaltPointerEnter() {\r\n    if (!blueIIalt)\r\n      hoverOverBlueII = true\r\n  }\r\n\r\n  function blueIIaltPointerLeave() {\r\n    if (!blueIIalt)\r\n      hoverOverBlueII = false\r\n  }\r\n\r\n  function blueIImainClick() {\r\n    hoverOverBlueII = false\r\n    if (blueIIalt)\r\n      blueIIalt = !blueIIalt\r\n    else\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"blueIImainCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n  }\r\n\r\n  function blueIIaltClick() {\r\n    hoverOverBlueII = false\r\n    if (blueIIalt)\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"blueIIaltCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n    else\r\n      blueIIalt = !blueIIalt\r\n  }\r\n\r\n  function redIImainPointerEnter() {\r\n    if (redIIalt)\r\n      hoverOverRedII = true\r\n  }\r\n\r\n  function redIImainPointerLeave() {\r\n    if (redIIalt)\r\n      hoverOverRedII = false\r\n  }\r\n\r\n  function redIIaltPointerEnter() {\r\n    if (!redIIalt)\r\n      hoverOverRedII = true\r\n  }\r\n\r\n  function redIIaltPointerLeave() {\r\n    if (!redIIalt)\r\n      hoverOverRedII = false\r\n  }\r\n\r\n  function redIImainClick() {\r\n    hoverOverRedII = false\r\n    if (redIIalt)\r\n      redIIalt = !redIIalt\r\n    else\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"redIImainCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n  }\r\n\r\n  function redIIaltClick() {\r\n    hoverOverRedII = false\r\n    if (redIIalt)\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"redIIaltCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n    else\r\n      redIIalt = !redIIalt\r\n  }\r\n\r\n  function greenIImainPointerEnter() {\r\n    if (greenIIalt)\r\n      hoverOverGreenII = true\r\n  }\r\n\r\n  function greenIImainPointerLeave() {\r\n    if (greenIIalt)\r\n      hoverOverGreenII = false\r\n  }\r\n\r\n  function greenIIaltPointerEnter() {\r\n    if (!greenIIalt)\r\n      hoverOverGreenII = true\r\n  }\r\n\r\n  function greenIIaltPointerLeave() {\r\n    if (!greenIIalt)\r\n      hoverOverGreenII = false\r\n  }\r\n\r\n  function greenIImainClick() {\r\n    hoverOverGreenII = false\r\n    if (greenIIalt)\r\n      greenIIalt = !greenIIalt\r\n    else\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"greenIImainCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n  }\r\n\r\n  function greenIIaltClick() {\r\n    hoverOverGreenII = false\r\n    if (greenIIalt)\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"greenIIaltCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n    else\r\n      greenIIalt = !greenIIalt\r\n  }\r\n  \r\n  function blueIIImainPointerEnter() {\r\n    if (blueIIIalt)\r\n      hoverOverBlueIII = true\r\n  }\r\n\r\n  function blueIIImainPointerLeave() {\r\n    if (blueIIIalt)\r\n      hoverOverBlueIII = false\r\n  }\r\n\r\n  function blueIIIaltPointerEnter() {\r\n    if (!blueIIIalt)\r\n      hoverOverBlueIII = true\r\n  }\r\n\r\n  function blueIIIaltPointerLeave() {\r\n    if (!blueIIIalt)\r\n      hoverOverBlueIII = false\r\n  }\r\n\r\n  function blueIIImainClick() {\r\n    hoverOverBlueIII = false\r\n    if (blueIIIalt)\r\n      blueIIIalt = !blueIIIalt\r\n    else\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"blueIIImainCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n  }\r\n\r\n  function blueIIIaltClick() {\r\n    hoverOverBlueIII = false\r\n    if (blueIIIalt)\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"blueIIIaltCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n    else\r\n      blueIIIalt = !blueIIIalt\r\n  }\r\n  \r\n  function redIIImainPointerEnter() {\r\n    if (redIIIalt)\r\n      hoverOverRedIII = true\r\n  }\r\n\r\n  function redIIImainPointerLeave() {\r\n    if (redIIIalt)\r\n      hoverOverRedIII = false\r\n  }\r\n\r\n  function redIIIaltPointerEnter() {\r\n    if (!redIIIalt)\r\n      hoverOverRedIII = true\r\n  }\r\n\r\n  function redIIIaltPointerLeave() {\r\n    if (!redIIIalt)\r\n      hoverOverRedIII = false\r\n  }\r\n\r\n  function redIIImainClick() {\r\n    hoverOverRedIII = false\r\n    if (redIIIalt)\r\n      redIIIalt = !redIIIalt\r\n    else\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"redIIImainCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n  }\r\n\r\n  function redIIIaltClick() {\r\n    hoverOverRedIII = false\r\n    if (redIIIalt)\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"redIIIaltCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n    else\r\n      redIIIalt = !redIIIalt\r\n  }\r\n  \r\n  function greenIIImainPointerEnter() {\r\n    if (greenIIIalt)\r\n      hoverOverGreenIII = true\r\n  }\r\n\r\n  function greenIIImainPointerLeave() {\r\n    if (greenIIIalt)\r\n      hoverOverGreenIII = false\r\n  }\r\n\r\n  function greenIIIaltPointerEnter() {\r\n    if (!greenIIIalt)\r\n      hoverOverGreenIII = true\r\n  }\r\n\r\n  function greenIIIaltPointerLeave() {\r\n    if (!greenIIIalt)\r\n      hoverOverGreenIII = false\r\n  }\r\n\r\n  function greenIIImainClick() {\r\n    hoverOverGreenIII = false\r\n    if (greenIIIalt)\r\n      greenIIIalt = !greenIIIalt\r\n    else\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"greenIIImainCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n  }\r\n\r\n  function greenIIIaltClick() {\r\n    hoverOverGreenIII = false\r\n    if (greenIIIalt)\r\n      bp.open({\r\n        intro: \"fadeup\",\r\n        items: [{ html: \"\" }],\r\n        onOpen: (container) => {\r\n          let card = new GoaCard({\r\n            target: container.querySelector(\".bp-html\") as Element,\r\n            props: { bp }\r\n          });\r\n          card.drawCard(document.getElementById(\"greenIIIaltCanvas\")! as HTMLCanvasElement)\r\n        },\r\n      })\r\n    else\r\n      greenIIIalt = !greenIIIalt\r\n  }\r\n\r\n  let avatarClickCounter = 0\r\n\r\n  function onAvatarClick() {\r\n    avatarClickCounter++\r\n    if (avatarClickCounter >= 10) disableShowNumbers = false\r\n  }\r\n</script>\r\n\r\n<div class=\"flex md:mt-20 mt-16 mb-52\">\r\n  <div class=\"grid grid-cols-12 m-auto\">\r\n    <div class=\"col-span-12 w-78 xs:w-96 sm:w-157 lg:w-239 h-41 xs:h-50 sm:h-82 lg:h-125 mt-4 xs:mt-5 sm:mt-7.5 lg:mt-10 relative\">\r\n      <div class=\"border border-dark-600 rounded-lg sm:rounded-xl lg:rounded-3xl left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 w-77.5 xs:w-95 sm:w-156 lg:w-237 absolute\" on:click={onAvatarClick}>\r\n        <Img src={banner} class=\"rounded-lg sm:rounded-xl lg:rounded-3xl\"/>\r\n        <p class=\"absolute text-black xs:text-xl sm:text-3xl lg:text-5xl -top-[14px] sm:-top-[19px] lg:-top-[24px] left-[10px] sm:left-[22px] lg:left-[34px] font-modesto\">{fullName}</p>\r\n        <p class=\"absolute text-black xs:text-xl sm:text-3xl lg:text-5xl -top-[10px] sm:-top-[13px] lg:-top-[16px] left-[6px] sm:left-[16px] lg:left-[26px] font-modesto\">{fullName}</p>\r\n        <p class=\"absolute text-black xs:text-xl sm:text-3xl lg:text-5xl -top-[14px] sm:-top-[19px] lg:-top-[24px] left-[6px] sm:left-[16px] lg:left-[26px] font-modesto\">{fullName}</p>\r\n        <p class=\"absolute text-black xs:text-xl sm:text-3xl lg:text-5xl -top-[10px] sm:-top-[13px] lg:-top-[16px] left-[10px] sm:left-[22px] lg:left-[34px] font-modesto\">{fullName}</p>\r\n        <p class=\"absolute text-white xs:text-xl sm:text-3xl lg:text-5xl -top-[12px] sm:-top-[16px] lg:-top-[20px] left-[8px] sm:left-[19px] lg:left-[30px] font-modesto\">{fullName}</p>\r\n      </div>\r\n    </div>\r\n\r\n    {#each stats as stat, stat_index (stat_index)}\r\n      <div id=\"{stat}\" class=\"col-span-3 h-3 xs:h-4 sm:h-5.5 lg:h-7 z-20 relative\">\r\n        <div class=\"left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 top-0.25 xs:top-0.5 sm:top-0.5 lg:top-1 h-2.5 xs:h-3 sm:h-4 lg:h-5 border border-dark-600 bg-transparent hover:bg-transparent rounded sm:rounded-lg lg:rounded-xl bg-dark-900 absolute\">\r\n          <div class=\"m-0.5 sm:m-0.5 lg:m-1 relative h-full\">\r\n            <Img src={statImages.get(stat)} class=\"absolute w-2 xs:w-2.5 sm:w-3.75 lg:w-5 z-30 -top-0.5 sm:-top-0.75 lg:-top-1.25 xs:left-0.5 sm:left-0.75 lg:left-1\" />\r\n            <div class=\"float-left w-2 xs:w-3.5 sm:w-6 lg:w-7 h-full bg-transparent\" />\r\n            {#each Array(8) as _, color_index (color_index)}\r\n              <div class=\"float-left w-0.5 sm:w-0.75 lg:w-1 h-1\" />\r\n              {#if hero.stats[stat_index] > color_index}\r\n                <div class=\"z-40 float-left w-[5.6px] xs:w-[7px] sm:w-[12px] lg:w-5 h-1 xs:h-1.5 sm:h-2 lg:h-2.5 rounded-sm sm:rounded lg:rounded-md bg-{heroName}\" />\r\n              {:else}\r\n                <div class=\"float-left w-[5.6px] xs:w-[7px] sm:w-[12px] lg:w-5 h-1 bg-transparent\" />\r\n              {/if}\r\n            {/each}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Tooltip triggeredBy=\"#{stat}\" placement=\"top\" class=\"z-50\">{stat.charAt(0).toUpperCase() + stat.slice(1)}</Tooltip>\r\n    {/each}\r\n\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-36 xs:h-44 sm:h-73 lg:h-111 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 top-0.25 xs:top-0.5 sm:top-0.5 lg:top-1 absolute\">\r\n        <canvas id=\"goldCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={gold} on:click={goldClick}/>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-36 xs:h-44 sm:h-73 lg:h-111 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 top-0.25 xs:top-0.5 sm:top-0.5 lg:top-1 absolute\">\r\n        <canvas id=\"silverCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={silver} on:click={silverClick}/>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-36 xs:h-44 sm:h-73 lg:h-111 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 top-0.25 xs:top-0.5 sm:top-0.5 lg:top-1 absolute\">\r\n        <canvas id=\"purpleCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={purple} on:click={purpleClick}/>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-35 xs:h-44 sm:h-73 lg:h-111 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 top-0.25 xs:top-0.5 sm:top-0.5 lg:top-1 absolute\">\r\n        <canvas id=\"blueICanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={blueIa} on:click={blueIClick}/>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-35 xs:h-44 sm:h-73 lg:h-111 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 top-0.25 xs:top-0.5 sm:top-0.5 lg:top-1 absolute\">\r\n        <canvas id=\"redICanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={redIa} on:click={redIClick}/>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-35 xs:h-44 sm:h-73 lg:h-111 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 top-0.25 xs:top-0.5 sm:top-0.5 lg:top-1 absolute\">\r\n        <canvas id=\"greenICanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={greenIa} on:click={greenIClick}/>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-40 xs:h-49 sm:h-81 lg:h-124 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {blueIIalt ? 'mainCardII' : hoverOverBlueII ? 'downCardII' : 'altCardII'}\">\r\n        <canvas id=\"blueIIaltCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={blueIIb} on:click={blueIIaltClick} on:pointerleave={blueIIaltPointerLeave} on:pointerenter={blueIIaltPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={blueIIaltChecked} on:change={checkBlueIIalt}></Checkbox>\r\n      </div>\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {!blueIIalt ? 'mainCardII' : hoverOverBlueII ? 'downCardII' : 'altCardII'}\">\r\n        <canvas id=\"blueIImainCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={blueIIa} on:click={blueIImainClick} on:pointerleave={blueIImainPointerLeave} on:pointerenter={blueIImainPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={blueIImainChecked} on:change={checkBlueIImain}></Checkbox>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-40 xs:h-49 sm:h-81 lg:h-124 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {redIIalt ? 'mainCardII' : hoverOverRedII ? 'downCardII' : 'altCardII'}\">\r\n        <canvas id=\"redIIaltCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={redIIb} on:click={redIIaltClick} on:pointerleave={redIIaltPointerLeave} on:pointerenter={redIIaltPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={redIIaltChecked} on:change={checkRedIIalt}></Checkbox>\r\n      </div>\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {!redIIalt ? 'mainCardII' : hoverOverRedII ? 'downCardII' : 'altCardII'}\">\r\n        <canvas id=\"redIImainCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={redIIa} on:click={redIImainClick} on:pointerleave={redIImainPointerLeave} on:pointerenter={redIImainPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={redIImainChecked} on:change={checkRedIImain}></Checkbox>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-40 xs:h-49 sm:h-81 lg:h-124 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {greenIIalt ? 'mainCardII' : hoverOverGreenII ? 'downCardII' : 'altCardII'}\">\r\n        <canvas id=\"greenIIaltCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={greenIIb} on:click={greenIIaltClick} on:pointerleave={greenIIaltPointerLeave} on:pointerenter={greenIIaltPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={greenIIaltChecked} on:change={checkGreenIIalt}></Checkbox>\r\n      </div>\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {!greenIIalt ? 'mainCardII' : hoverOverGreenII ? 'downCardII' : 'altCardII'}\">\r\n        <canvas id=\"greenIImainCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={greenIIa} on:click={greenIImainClick} on:pointerleave={greenIImainPointerLeave} on:pointerenter={greenIImainPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={greenIImainChecked} on:change={checkGreenIImain}></Checkbox>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-40 xs:h-49 sm:h-81 lg:h-124 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {blueIIIalt ? 'mainCardIII' : hoverOverBlueIII ? 'downCardIII' : 'altCardIII'}\">\r\n        <canvas id=\"blueIIIaltCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={blueIIIb} on:click={blueIIIaltClick} on:pointerleave={blueIIIaltPointerLeave} on:pointerenter={blueIIIaltPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={blueIIIaltChecked} on:change={checkBlueIIIalt}></Checkbox>\r\n      </div>\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {!blueIIIalt ? 'mainCardIII' : hoverOverBlueIII ? 'downCardIII' : 'altCardIII'}\">\r\n        <canvas id=\"blueIIImainCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={blueIIIa} on:click={blueIIImainClick} on:pointerleave={blueIIImainPointerLeave} on:pointerenter={blueIIImainPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={blueIIImainChecked} on:change={checkBlueIIImain}></Checkbox>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-40 xs:h-49 sm:h-81 lg:h-124 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {redIIIalt ? 'mainCardIII' : hoverOverRedIII ? 'downCardIII' : 'altCardIII'}\">\r\n        <canvas id=\"redIIIaltCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={redIIIb} on:click={redIIIaltClick} on:pointerleave={redIIIaltPointerLeave} on:pointerenter={redIIIaltPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={redIIIaltChecked} on:change={checkRedIIIalt}></Checkbox>\r\n      </div>\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {!redIIIalt ? 'mainCardIII' : hoverOverRedIII ? 'downCardIII' : 'altCardIII'}\">\r\n        <canvas id=\"redIIImainCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={redIIIa} on:click={redIIImainClick} on:pointerleave={redIIImainPointerLeave} on:pointerenter={redIIImainPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={redIIImainChecked} on:change={checkRedIIImain}></Checkbox>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-span-4 w-26 xs:w-32 sm:w-52 lg:w-80 h-40 xs:h-49 sm:h-81 lg:h-124 relative\">\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {greenIIIalt ? 'mainCardIII' : hoverOverGreenIII ? 'downCardIII' : 'altCardIII'}\">\r\n        <canvas id=\"greenIIIaltCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={greenIIIb} on:click={greenIIIaltClick} on:pointerleave={greenIIIaltPointerLeave} on:pointerenter={greenIIIaltPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={greenIIIaltChecked} on:change={checkGreenIIIalt}></Checkbox>\r\n      </div>\r\n      <div class=\"border border-dark-600 bg-transparent hover:bg-transparent rounded-lg sm:rounded-xl lg:rounded-3xl w-25.5 xs:w-31 sm:w-51.5 lg:w-78 left-0.25 xs:left-0.5 sm:left-0.5 lg:left-1 absolute duration-500 {!greenIIIalt ? 'mainCardIII' : hoverOverGreenIII ? 'downCardIII' : 'altCardIII'}\">\r\n        <canvas id=\"greenIIImainCanvas\" width=\"1192\" height=\"1664\" class=\"w-full rounded-lg sm:rounded-xl lg:rounded-3xl\" bind:this={greenIIIa} on:click={greenIIImainClick} on:pointerleave={greenIIImainPointerLeave} on:pointerenter={greenIIImainPointerEnter}/>\r\n        <Checkbox class=\"absolute top-[3px] xs:top-[4px] sm:top-[7px] lg:top-[11px] right-0 xs:right-[1px] sm:right-[5px] lg:right-[9px] w-2 sm:w-3.5 lg:w-5 h-2 sm:h-3.5 lg:h-5\" bind:checked={greenIIImainChecked} on:change={checkGreenIIImain}></Checkbox>\r\n      </div>\r\n    </div>\r\n    <div id=\"showNumbers\" class=\"col-span-6 flex-col content-center mt-8 xs:mt-10 sm:mt-14 flex items-center\">\r\n      <Checkbox bind:checked={showNumbers} disabled={disableShowNumbers}>\r\n        <div style=\"color: {labelColor(disableShowNumbers)}\">\r\n          Show Numbers\r\n        </div>\r\n      </Checkbox>\r\n      <Tooltip triggeredBy=\"#showNumbers\" placement=\"bottom\" class=\"z-50\">Disabled by the developer's request</Tooltip>\r\n    </div>\r\n    <div class=\"col-span-6 flex-col content-center mt-8 xs:mt-10 sm:mt-14 flex items-center\">\r\n      <Checkbox bind:checked={showHandicap}>\r\n        <div style=\"color: white\">\r\n          Show Handicap\r\n        </div>\r\n      </Checkbox>\r\n    </div>\r\n  </div>\r\n\r\n  <p class=\"absolute font-modesto\"></p>\r\n</div>\r\n\r\n<style>\r\n  .mainCardII {\r\n      top: 0.25rem;\r\n      z-index: 30;\r\n  }\r\n  .altCardII {\r\n      top: 21px;\r\n      @media (min-width: 400px) {\r\n          top: 1.5rem;\r\n      }\r\n      @media (min-width: 640px) {\r\n          top: 36px;\r\n      }\r\n      @media (min-width: 1024px) {\r\n          top: 3.5rem;\r\n      }\r\n      z-index: 20;\r\n  }\r\n  .downCardII {\r\n      top: 2.5rem;\r\n      @media (min-width: 400px) {\r\n          top: 3rem;\r\n      }\r\n      @media (min-width: 640px) {\r\n          top: 4.6rem;\r\n      }\r\n      @media (min-width: 1024px) {\r\n          top: 7rem;\r\n      }\r\n      z-index: 20;\r\n  }\r\n  .mainCardIII {\r\n      top: 0.25rem;\r\n      z-index: 10;\r\n  }\r\n  .altCardIII {\r\n      top: 21px;\r\n      @media (min-width: 400px) {\r\n          top: 1.5rem;\r\n      }\r\n      @media (min-width: 640px) {\r\n          top: 36px;\r\n      }\r\n      @media (min-width: 1024px) {\r\n          top: 3.5rem;\r\n      }\r\n      z-index: 0;\r\n  }\r\n  .downCardIII {\r\n      top: 2.5rem;\r\n      @media (min-width: 400px) {\r\n          top: 3rem;\r\n      }\r\n      @media (min-width: 640px) {\r\n          top: 4.6rem;\r\n      }\r\n      @media (min-width: 1024px) {\r\n          top: 7rem;\r\n      }\r\n      z-index: 0;\r\n  }\r\n\r\n   .font-modesto {\r\n       font-family: \"Modesto Poster\", serif;\r\n   }\r\n\r\n  @font-face{\r\n      font-family: \"Modesto Poster\";\r\n      src: url(\"../../lib/fonts/modesto_poster.woff\") format(\"woff\");\r\n  }\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/routes/[hero]/CardGrid.svelte b/src/routes/[hero]/CardGrid.svelte
--- a/src/routes/[hero]/CardGrid.svelte	(revision 9242ac5b6636b479f8dbecbabce62dbe4675670a)
+++ b/src/routes/[hero]/CardGrid.svelte	(date 1716067385826)
@@ -717,33 +717,28 @@
           )
       })
 
-    importCardImage(heroName, "BlueIA").then(() => {
-      blueIaBg = images.get("BlueIA")
+    importCardImage(heroName, "Blue1a").then(() => {
+      blueIaBg = images.get("Blue1a")
       blueIaLoaded = true
     })
 
-    importCardImage(heroName, "BlueIIA").then(() => {
-      blueIIaBg = images.get("BlueIIA")
+    importCardImage(heroName, "Blue2a").then(() => {
+      blueIIaBg = images.get("Blue2a")
       blueIIaLoaded = true
     })
 
-    importCardImage(heroName, "BlueIIB").then(() => {
-      blueIIbBg = images.get("BlueIIB")
+    importCardImage(heroName, "Blue2b").then(() => {
+      blueIIbBg = images.get("Blue2b")
       blueIIbLoaded = true
     })
 
-    importCardImage(heroName, "BlueIIIA").then(() => {
-      blueIIIaBg = images.get("BlueIIIA")
+    importCardImage(heroName, "Blue3a").then(() => {
+      blueIIIaBg = images.get("Blue3a")
       blueIIIaLoaded = true
     })
 
-    importCardImage(heroName, "BlueIIIA").then(() => {
-      blueIIIaBg = images.get("BlueIIIA")
-      blueIIIaLoaded = true
-    })
-
-    importCardImage(heroName, "BlueIIIB").then(() => {
-      blueIIIbBg = images.get("BlueIIIB")
+    importCardImage(heroName, "Blue3b").then(() => {
+      blueIIIbBg = images.get("Blue3b")
       blueIIIbLoaded = true
     })
 
@@ -752,28 +747,28 @@
       goldLoaded = true
     })
 
-    importCardImage(heroName, "GreenIA").then(() => {
-      greenIaBg = images.get("GreenIA")
+    importCardImage(heroName, "Green1a").then(() => {
+      greenIaBg = images.get("Green1a")
       greenIaLoaded = true
     })
 
-    importCardImage(heroName, "GreenIIA").then(() => {
-      greenIIaBg = images.get("GreenIIA")
+    importCardImage(heroName, "Green2a").then(() => {
+      greenIIaBg = images.get("Green2a")
       greenIIaLoaded = true
     })
 
-    importCardImage(heroName, "GreenIIB").then(() => {
-      greenIIbBg = images.get("GreenIIB")
+    importCardImage(heroName, "Green2b").then(() => {
+      greenIIbBg = images.get("Green2b")
       greenIIbLoaded = true
     })
 
-    importCardImage(heroName, "GreenIIIA").then(() => {
-      greenIIIaBg = images.get("GreenIIIA")
+    importCardImage(heroName, "Green3a").then(() => {
+      greenIIIaBg = images.get("Green3a")
       greenIIIaLoaded = true
     })
 
-    importCardImage(heroName, "GreenIIIB").then(() => {
-      greenIIIbBg = images.get("GreenIIIB")
+    importCardImage(heroName, "Green3b").then(() => {
+      greenIIIbBg = images.get("Green3b")
       greenIIIbLoaded = true
     })
 
@@ -782,28 +777,28 @@
       goldHandicapLoaded = true
     })
 
-    importCardImage(heroName, "RedIA").then(() => {
-      redIaBg = images.get("RedIA")
+    importCardImage(heroName, "Red1a").then(() => {
+      redIaBg = images.get("Red1a")
       redIaLoaded = true
     })
 
-    importCardImage(heroName, "RedIIA").then(() => {
-      redIIaBg = images.get("RedIIA")
+    importCardImage(heroName, "Red2a").then(() => {
+      redIIaBg = images.get("Red2a")
       redIIaLoaded = true
     })
 
-    importCardImage(heroName, "RedIIB").then(() => {
-      redIIbBg = images.get("RedIIB")
+    importCardImage(heroName, "Red2b").then(() => {
+      redIIbBg = images.get("Red2b")
       redIIbLoaded = true
     })
 
-    importCardImage(heroName, "RedIIIA").then(() => {
-      redIIIaBg = images.get("RedIIIA")
+    importCardImage(heroName, "Red3a").then(() => {
+      redIIIaBg = images.get("Red3a")
       redIIIaLoaded = true
     })
 
-    importCardImage(heroName, "RedIIIB").then(() => {
-      redIIIbBg = images.get("RedIIIB")
+    importCardImage(heroName, "Red3b").then(() => {
+      redIIIbBg = images.get("Red3b")
       redIIIbLoaded = true
     })
 
@@ -812,8 +807,8 @@
       silverLoaded = true
     })
 
-    importCardImage(heroName, "Ultimate").then(() => {
-      purpleBg = images.get("Ultimate")
+    importCardImage(heroName, "Purple").then(() => {
+      purpleBg = images.get("Purple")
       purpleLoaded = true
     })
 
Index: src/card_painter.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export function updateCanvas(\r\n\tcanvas: HTMLCanvasElement,\r\n\tcontext: CanvasRenderingContext2D,\r\n\tcustomEmoji: Array<[string, HTMLImageElement]>,\r\n\tbackground: HTMLImageElement | undefined,\r\n\tcolor: Color,\r\n\thandicap: boolean,\r\n\tname: string,\r\n\tdescription: string,\r\n\tlevel: string,\r\n\titem: Item,\r\n\tinitiative: number,\r\n\tprimaryActionType: Type,\r\n\tprimaryActionValue: number,\r\n\tprimaryActionValueSign: ValueSign,\r\n\tmodifier: Modifier,\r\n\tmodifierValue: number,\r\n\tmodifierValueSign: ValueSign,\r\n\tsecondaryMovementValue: number,\r\n\tsecondaryDefenseValue: number,\r\n\tinitiativeBonus: number = 0,\r\n\tattackBonus: number = 0,\r\n\tdefenseBonus: number = 0,\r\n\tareaBonus: number = 0,\r\n\trangeBonus: number = 0,\r\n\tmovementBonus: number = 0,\r\n\tshowNumbers: boolean = true,\r\n\tattackStat: number = 0,\r\n\tdefenseStat: number = 0,\r\n\tinitiativeStat: number = 0,\r\n\tmovementStat: number = 0\r\n): void {\r\n\tclear(canvas, context);\r\n\r\n\tif (background instanceof HTMLImageElement) {\r\n\t\tcontext.drawImage(background, 0, 0, 1192, 1664);\r\n\t}\r\n\r\n\tif (color == Color.PURPLE) {\r\n\t\taddImage(context, 'title_ultimate', 0, 0);\r\n\t\taddTitle(context, name, 594, 140, 760);\r\n\t} else {\r\n\t\taddImage(context, 'title', 0, 0);\r\n\t\taddTitle(context, name, 632, 140, 710);\r\n\t}\r\n\r\n\tconst descriptionLines = description.split(/\\r\\n|\\r|\\n/);\r\n\tconst descriptionHeight = descriptionLines.length;\r\n\tcontext.font = '49px Arial';\r\n\r\n\tfunction placeSecondary(inset: number) {\r\n\t\tif (primaryActionType == Type.DEFENSE || primaryActionType == Type.DEFENSE_SKILL) {\r\n\t\t\taddImage(context, 'movement', 64, inset);\r\n\t\t\taddSecondaryValue(\r\n\t\t\t\tcontext,\r\n\t\t\t\tsecondaryMovementValue + movementBonus,\r\n\t\t\t\t143,\r\n\t\t\t\tinset + 121,\r\n\t\t\t\tmovementBonus,\r\n\t\t\t\tshowNumbers,\r\n\t\t\t\tcolor,\r\n\t\t\t\tlevel,\r\n\t\t\t\tStat.MOVEMENT,\r\n\t\t\t\tmovementStat,\r\n\t\t\t);\r\n\t\t} else if (primaryActionType == Type.MOVEMENT) {\r\n\t\t\taddImage(context, 'defense', 70, inset);\r\n\t\t\taddSecondaryValue(\r\n\t\t\t\tcontext,\r\n\t\t\t\tsecondaryDefenseValue + defenseBonus,\r\n\t\t\t\t143,\r\n\t\t\t\tinset + 131,\r\n\t\t\t\tdefenseBonus,\r\n\t\t\t\tshowNumbers,\r\n\t\t\t\tcolor,\r\n\t\t\t\tlevel,\r\n\t\t\t\tStat.DEFENSE,\r\n\t\t\t\tdefenseStat,\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\taddImage(context, 'movement', 64, inset);\r\n\t\t\taddImage(context, 'defense', 70, inset - 209);\r\n\t\t\taddSecondaryValue(\r\n\t\t\t\tcontext,\r\n\t\t\t\tsecondaryMovementValue + movementBonus,\r\n\t\t\t\t143,\r\n\t\t\t\tinset + 121,\r\n\t\t\t\tmovementBonus,\r\n\t\t\t\tshowNumbers,\r\n\t\t\t\tcolor,\r\n\t\t\t\tlevel,\r\n\t\t\t\tStat.MOVEMENT,\r\n\t\t\t\tmovementStat,\r\n\t\t\t);\r\n\t\t\taddSecondaryValue(\r\n\t\t\t\tcontext,\r\n\t\t\t\tsecondaryDefenseValue + defenseBonus,\r\n\t\t\t\t143,\r\n\t\t\t\tinset - 79,\r\n\t\t\t\tdefenseBonus,\r\n\t\t\t\tshowNumbers,\r\n\t\t\t\tcolor,\r\n\t\t\t\tlevel,\r\n\t\t\t\tStat.DEFENSE,\r\n\t\t\t\tdefenseStat,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction placeSecondaryOnSilver(inset: number) {\r\n\t\tif (primaryActionType != Type.DEFENSE && primaryActionType != Type.DEFENSE_SKILL) {\r\n\t\t\taddImage(context, 'defense', 70, inset);\r\n\t\t\taddSecondaryValue(\r\n\t\t\t\tcontext,\r\n\t\t\t\tsecondaryDefenseValue + defenseBonus,\r\n\t\t\t\t143,\r\n\t\t\t\tinset + 131,\r\n\t\t\t\tdefenseBonus,\r\n\t\t\t\tshowNumbers,\r\n\t\t\t\tcolor,\r\n\t\t\t\tlevel,\r\n\t\t\t\tStat.DEFENSE,\r\n\t\t\t\tdefenseStat,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tswitch (color) {\r\n\t\tcase Color.GOLD:\r\n\t\t\tswitch (descriptionHeight) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\tcase 2:\r\n\t\t\t\tcase 3:\r\n\t\t\t\tcase 4:\r\n\t\t\t\tcase 5:\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\taddImage(context, 'banner_gold_bottom', 50, 278);\r\n\t\t\t\t\taddImage(context, 'banner_gold_top', 50, 0);\r\n\t\t\t\t\tplaceSecondary(645);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\taddImage(context, 'banner_gold_bottom', 50, 219);\r\n\t\t\t\t\taddImage(context, 'banner_gold_top', 50, 0);\r\n\t\t\t\t\tplaceSecondary(586);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\taddImage(context, 'banner_gold_bottom', 50, 158);\r\n\t\t\t\t\taddImage(context, 'banner_gold_top', 50, 0);\r\n\t\t\t\t\tplaceSecondary(525);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase Color.SILVER:\r\n\t\t\tswitch (descriptionHeight) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\tcase 2:\r\n\t\t\t\tcase 3:\r\n\t\t\t\tcase 4:\r\n\t\t\t\tcase 5:\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\taddImage(context, 'banner_silver_bottom', 50, 318);\r\n\t\t\t\t\taddImage(context, 'banner_silver_top', 50, 0);\r\n\t\t\t\t\tplaceSecondaryOnSilver(637);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\taddImage(context, 'banner_silver_bottom', 50, 259);\r\n\t\t\t\t\taddImage(context, 'banner_silver_top', 50, 0);\r\n\t\t\t\t\tplaceSecondaryOnSilver(578);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\taddImage(context, 'banner_silver_bottom', 50, 198);\r\n\t\t\t\t\taddImage(context, 'banner_silver_top', 50, 0);\r\n\t\t\t\t\tplaceSecondaryOnSilver(517);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase Color.RED:\r\n\t\t\tif (level == 'ii' || level == 'iii') {\r\n\t\t\t\tswitch (descriptionHeight) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\taddImage(context, 'banner_red_bottom', 50, 330);\r\n\t\t\t\t\t\taddImage(context, 'banner_red_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(645);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\taddImage(context, 'banner_red_bottom', 50, 271);\r\n\t\t\t\t\t\taddImage(context, 'banner_red_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(586);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\taddImage(context, 'banner_red_bottom', 50, 210);\r\n\t\t\t\t\t\taddImage(context, 'banner_red_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(525);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\taddImage(context, 'banner_red_bottom', 50, 150);\r\n\t\t\t\t\t\taddImage(context, 'banner_red_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(465);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (descriptionHeight) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\taddImage(context, 'banner_red_bottom', 50, 330);\r\n\t\t\t\t\t\taddImage(context, 'banner_red_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(645);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\taddImage(context, 'banner_red_bottom', 50, 271);\r\n\t\t\t\t\t\taddImage(context, 'banner_red_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(586);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\taddImage(context, 'banner_red_bottom', 50, 210);\r\n\t\t\t\t\t\taddImage(context, 'banner_red_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(525);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase Color.BLUE:\r\n\t\t\tif (level == 'ii' || level == 'iii') {\r\n\t\t\t\tswitch (descriptionHeight) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_bottom', 50, 318);\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(645);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_bottom', 50, 259);\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(586);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_bottom', 50, 198);\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(525);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_bottom', 50, 138);\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(465);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (descriptionHeight) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_bottom', 50, 318);\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(645);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_bottom', 50, 259);\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(586);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_bottom', 50, 198);\r\n\t\t\t\t\t\taddImage(context, 'banner_blue_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(525);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase Color.GREEN:\r\n\t\t\tif (level == 'ii' || level == 'iii') {\r\n\t\t\t\tswitch (descriptionHeight) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\taddImage(context, 'banner_green_bottom', 50, 325);\r\n\t\t\t\t\t\taddImage(context, 'banner_green_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(645);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\taddImage(context, 'banner_green_bottom', 50, 266);\r\n\t\t\t\t\t\taddImage(context, 'banner_green_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(586);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\taddImage(context, 'banner_green_bottom', 50, 205);\r\n\t\t\t\t\t\taddImage(context, 'banner_green_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(525);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\taddImage(context, 'banner_green_bottom', 50, 145);\r\n\t\t\t\t\t\taddImage(context, 'banner_green_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(465);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (descriptionHeight) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\taddImage(context, 'banner_green_bottom', 50, 325);\r\n\t\t\t\t\t\taddImage(context, 'banner_green_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(645);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\taddImage(context, 'banner_green_bottom', 50, 266);\r\n\t\t\t\t\t\taddImage(context, 'banner_green_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(586);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\taddImage(context, 'banner_green_bottom', 50, 205);\r\n\t\t\t\t\t\taddImage(context, 'banner_green_top', 50, 0);\r\n\t\t\t\t\t\tplaceSecondary(525);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tif (color != Color.PURPLE) {\r\n\t\taddImage(context, 'initiative', 26, 13);\r\n\t\taddInitiative(\r\n\t\t\tcontext,\r\n\t\t\tinitiative + initiativeBonus,\r\n\t\t\t143,\r\n\t\t\t192,\r\n\t\t\tinitiativeBonus,\r\n\t\t\tshowNumbers,\r\n\t\t\tcolor,\r\n\t\t\tlevel,\r\n\t\t\tinitiativeStat\r\n\t\t);\r\n\t}\r\n\r\n\tlet cardType = '';\r\n\tcardType += color == Color.GOLD || color == Color.SILVER ? 'Basic ' : '';\r\n\tif (color == Color.PURPLE) {\r\n\t\tcardType += 'Ultimate';\r\n\t} else {\r\n\t\tswitch (primaryActionType) {\r\n\t\t\tcase Type.SKILL:\r\n\t\t\t\tcardType += 'Skill';\r\n\t\t\t\tbreak;\r\n\t\t\tcase Type.ATTACK:\r\n\t\t\t\tcardType += 'Attack';\r\n\t\t\t\tbreak;\r\n\t\t\tcase Type.MOVEMENT:\r\n\t\t\t\tcardType += 'Movement';\r\n\t\t\t\tbreak;\r\n\t\t\tcase Type.DEFENSE:\r\n\t\t\t\tcardType += 'Defense';\r\n\t\t\t\tbreak;\r\n\t\t\tcase Type.DEFENSE_SKILL:\r\n\t\t\t\tif ((color == Color.GOLD || color == Color.SILVER) && modifier != Modifier.NONE)\r\n\t\t\t\t\tcardType += 'Defense/Skill';\r\n\t\t\t\telse cardType += 'Defense / Skill';\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tswitch (modifier) {\r\n\t\tcase Modifier.RANGE:\r\n\t\t\tcardType += ' - Ranged';\r\n\t\t\tbreak;\r\n\t\tcase Modifier.AREA:\r\n\t\t\tcardType += ' - Area';\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tlet primaryActionHeight;\r\n\r\n\tconst lowerColor = color.toLowerCase();\r\n\r\n\tif (\r\n\t\t(level == 'ii' || level == 'iii') &&\r\n\t\t(color == Color.RED || color == Color.BLUE || color == Color.GREEN)\r\n\t) {\r\n\t\taddImage(context, 'bottom_long', 0, 1412);\r\n\r\n\t\tswitch (descriptionHeight) {\r\n\t\t\tcase 1:\r\n\t\t\t\taddImage(context, 'frame_empty_bottom', 56, 1415);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1249);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 1137);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle_cut', 56, 1340);\r\n\t\t\t\taddCardDescription(context, customEmoji, description, 596, 1358);\r\n\t\t\t\taddCardType(context, cardType, 596, 1200);\r\n\t\t\t\tprimaryActionHeight = 1137;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\taddImage(context, 'frame_empty_bottom', 56, 1415);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1249);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 1098);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle_cut', 56, 1340);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1311);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1372);\r\n\t\t\t\taddCardType(context, cardType, 596, 1161);\r\n\t\t\t\tprimaryActionHeight = 1098;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\taddImage(context, 'frame_empty_bottom', 56, 1415);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1249);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1216);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 1065);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle_cut', 56, 1340);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1262);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1323);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1387);\r\n\t\t\t\taddCardType(context, cardType, 596, 1128);\r\n\t\t\t\tprimaryActionHeight = 1065;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\taddImage(context, 'frame_empty_bottom', 56, 1415);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1249);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1083);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 1002);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle_cut', 56, 1340);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1198);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1259);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1323);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[3], 596, 1387);\r\n\t\t\t\taddCardType(context, cardType, 596, 1065);\r\n\t\t\t\tprimaryActionHeight = 1002;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\taddImage(context, 'frame_empty_bottom', 56, 1415);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1249);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1083);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 937);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle_cut', 56, 1340);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1134);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1198);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1259);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[3], 596, 1323);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[4], 596, 1387);\r\n\t\t\t\taddCardType(context, cardType, 596, 1000);\r\n\t\t\t\tprimaryActionHeight = 937;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\taddImage(context, 'frame_empty_bottom', 56, 1415);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1249);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1083);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1015);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 864);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle_cut', 56, 1340);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1064);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1128);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1189);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[3], 596, 1253);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[4], 596, 1314);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[5], 596, 1378);\r\n\t\t\t\taddCardType(context, cardType, 596, 927);\r\n\t\t\t\tprimaryActionHeight = 864;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\taddImage(context, 'frame_empty_bottom', 56, 1415);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1249);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1083);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1015);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 987);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 836);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle_cut', 56, 1340);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1019);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1083);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1144);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[3], 596, 1208);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[4], 596, 1269);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[5], 596, 1333);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[6], 596, 1397);\r\n\t\t\t\taddCardType(context, cardType, 596, 899);\r\n\t\t\t\tprimaryActionHeight = 836;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t} else {\r\n\t\taddImage(context, 'bottom_short', 0, 1413);\r\n\r\n\t\tswitch (descriptionHeight) {\r\n\t\t\tcase 1:\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_bottom', 56, 1522);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1356);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 1244);\r\n\t\t\t\taddCardDescription(context, customEmoji, description, 596, 1465);\r\n\t\t\t\taddCardType(context, cardType, 596, 1307);\r\n\t\t\t\tprimaryActionHeight = 1244;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_bottom', 56, 1522);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1356);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 1205);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1418);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1479);\r\n\t\t\t\taddCardType(context, cardType, 596, 1268);\r\n\t\t\t\tprimaryActionHeight = 1205;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_bottom', 56, 1522);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1356);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1323);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 1172);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1369);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1430);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1494);\r\n\t\t\t\taddCardType(context, cardType, 596, 1235);\r\n\t\t\t\tprimaryActionHeight = 1172;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_bottom', 56, 1522);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1356);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1190);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 1109);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1305);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1366);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1430);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[3], 596, 1494);\r\n\t\t\t\taddCardType(context, cardType, 596, 1172);\r\n\t\t\t\tprimaryActionHeight = 1109;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_bottom', 56, 1522);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1356);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1190);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 1044);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1241);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1305);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1366);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[3], 596, 1430);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[4], 596, 1494);\r\n\t\t\t\taddCardType(context, cardType, 596, 1107);\r\n\t\t\t\tprimaryActionHeight = 1044;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_bottom', 56, 1522);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1356);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1190);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1122);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 971);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1171);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1235);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1296);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[3], 596, 1360);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[4], 596, 1421);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[5], 596, 1485);\r\n\t\t\t\taddCardType(context, cardType, 596, 1034);\r\n\t\t\t\tprimaryActionHeight = 971;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_bottom', 56, 1522);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1356);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1190);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1122);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1094);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 943);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1126);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1190);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1251);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[3], 596, 1315);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[4], 596, 1376);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[5], 596, 1440);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[6], 596, 1504);\r\n\t\t\t\taddCardType(context, cardType, 596, 1006);\r\n\t\t\t\tprimaryActionHeight = 943;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_bottom', 56, 1552);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1386);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1326);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1190);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1122);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_middle', 56, 1074);\r\n\t\t\t\taddImage(context, 'frame_' + lowerColor + '_top', 56, 923);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[0], 596, 1098);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[1], 596, 1159);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[2], 596, 1222);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[3], 596, 1286);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[4], 596, 1347);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[5], 596, 1411);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[6], 596, 1472);\r\n\t\t\t\taddCardDescription(context, customEmoji, descriptionLines[7], 596, 1536);\r\n\t\t\t\taddCardType(context, cardType, 596, 986);\r\n\t\t\t\tprimaryActionHeight = 923;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tlet modifierValueWidth = 0;\r\n\tswitch (modifier) {\r\n\t\tcase Modifier.AREA:\r\n\t\t\taddImage(context, `area_${lowerColor}`, 921, primaryActionHeight - 20);\r\n\t\t\tmodifierValueWidth = addModifierValue(\r\n\t\t\t\tcontext,\r\n\t\t\t\tmodifierValue + areaBonus,\r\n\t\t\t\t1052,\r\n\t\t\t\tprimaryActionHeight + 82,\r\n\t\t\t\tareaBonus\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase Modifier.RANGE:\r\n\t\t\taddImage(context, `range_${lowerColor}`, 936, primaryActionHeight - 77);\r\n\t\t\tmodifierValueWidth = addModifierValue(\r\n\t\t\t\tcontext,\r\n\t\t\t\tmodifierValue + rangeBonus,\r\n\t\t\t\t1052,\r\n\t\t\t\tprimaryActionHeight + 82,\r\n\t\t\t\trangeBonus\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t}\r\n\tif (\r\n\t\t(modifier == Modifier.AREA || modifier == Modifier.RANGE) &&\r\n\t\t(modifierValueSign == ValueSign.PLUS || modifierValueSign == ValueSign.MINUS)\r\n\t) {\r\n\t\taddSign(\r\n\t\t\tcontext,\r\n\t\t\tmodifierValueSign == ValueSign.PLUS ? '+' : '-',\r\n\t\t\t1052 + modifierValueWidth / 2,\r\n\t\t\tprimaryActionHeight + 82\r\n\t\t);\r\n\t}\r\n\r\n\taddImage(context, `colorblind_${lowerColor}`, 1116, 46);\r\n\r\n\tif (color == Color.RED || color == Color.BLUE || color == Color.GREEN) {\r\n\t\taddImage(context, `level_${level}`, 1006, 85);\r\n\r\n\t\tif (level == 'ii' || level == 'iii') addImage(context, `item_${item.toLowerCase()}`, 476, 1484);\r\n\t}\r\n\r\n\tif (color == Color.GOLD && handicap) {\r\n\t\taddImage(context, 'level_h', 1008, 85);\r\n\t}\r\n\r\n\tif (color == Color.PURPLE) {\r\n\t\taddImage(context, 'level_iv', 1008, 85);\r\n\t} else {\r\n\t\tlet primaryValueWidth = 0;\r\n\t\tswitch (primaryActionType) {\r\n\t\t\tcase Type.SKILL:\r\n\t\t\t\taddImage(context, `skill_${lowerColor}`, 22, primaryActionHeight - 79);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Type.ATTACK:\r\n\t\t\t\taddImage(context, `attack_${lowerColor}`, 19, primaryActionHeight - 82);\r\n\t\t\t\tif (primaryActionValueSign != ValueSign.EXCLAMATION)\r\n\t\t\t\t\tprimaryValueWidth = addPrimaryValue(\r\n\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\tprimaryActionValue + attackBonus,\r\n\t\t\t\t\t\t142,\r\n\t\t\t\t\t\tprimaryActionHeight + 82,\r\n\t\t\t\t\t\tattackBonus,\r\n\t\t\t\t\t\tshowNumbers,\r\n\t\t\t\t\t\tcolor,\r\n\t\t\t\t\t\tlevel,\r\n\t\t\t\t\t\tStat.ATTACK,\r\n\t\t\t\t\t\tattackStat\r\n\t\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Type.MOVEMENT:\r\n\t\t\t\taddImage(context, `movement_${lowerColor}`, 43, primaryActionHeight - 68);\r\n\t\t\t\tif (primaryActionValueSign != ValueSign.EXCLAMATION)\r\n\t\t\t\t\tprimaryValueWidth = addPrimaryValue(\r\n\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\tprimaryActionValue + movementBonus,\r\n\t\t\t\t\t\t142,\r\n\t\t\t\t\t\tprimaryActionHeight + 82,\r\n\t\t\t\t\t\tmovementBonus,\r\n\t\t\t\t\t\tshowNumbers,\r\n\t\t\t\t\t\tcolor,\r\n\t\t\t\t\t\tlevel,\r\n\t\t\t\t\t\tStat.MOVEMENT,\r\n\t\t\t\t\t\tmovementStat\r\n\t\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Type.DEFENSE:\r\n\t\t\t\taddImage(context, `defense_${lowerColor}`, 51, primaryActionHeight - 74);\r\n\t\t\t\tif (primaryActionValueSign != ValueSign.EXCLAMATION)\r\n\t\t\t\t\tprimaryValueWidth = addPrimaryValue(\r\n\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\tprimaryActionValue + defenseBonus,\r\n\t\t\t\t\t\t142,\r\n\t\t\t\t\t\tprimaryActionHeight + 82,\r\n\t\t\t\t\t\tdefenseBonus,\r\n\t\t\t\t\t\tshowNumbers,\r\n\t\t\t\t\t\tcolor,\r\n\t\t\t\t\t\tlevel,\r\n\t\t\t\t\t\tStat.DEFENSE,\r\n\t\t\t\t\t\tdefenseStat\r\n\t\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Type.DEFENSE_SKILL:\r\n\t\t\t\taddImage(context, `defense_skill_${lowerColor}`, 51, primaryActionHeight - 74);\r\n\t\t\t\tif (primaryActionValueSign != ValueSign.EXCLAMATION)\r\n\t\t\t\t\tprimaryValueWidth = addPrimaryValue(\r\n\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\tprimaryActionValue + defenseBonus,\r\n\t\t\t\t\t\t142,\r\n\t\t\t\t\t\tprimaryActionHeight + 82,\r\n\t\t\t\t\t\tdefenseBonus,\r\n\t\t\t\t\t\tshowNumbers,\r\n\t\t\t\t\t\tcolor,\r\n\t\t\t\t\t\tlevel,\r\n\t\t\t\t\t\tStat.DEFENSE,\r\n\t\t\t\t\t\tdefenseStat\r\n\t\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (primaryActionType != Type.SKILL && primaryActionValueSign != ValueSign.NONE) {\r\n\t\t\tif (primaryActionValueSign == ValueSign.EXCLAMATION)\r\n\t\t\t\taddBlockValue(context, '!', 142, primaryActionHeight + 82);\r\n\t\t\telse\r\n\t\t\t\taddSign(\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\tprimaryActionValueSign == ValueSign.PLUS ? '+' : '-',\r\n\t\t\t\t\t142 + primaryValueWidth / 2,\r\n\t\t\t\t\tprimaryActionHeight + 82\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nimport {\r\n\tcardImageNames,\r\n\tcardStats,\r\n\tColor,\r\n\tdefaultEmoji,\r\n\timageNames,\r\n\tItem,\r\n\tModifier,\r\n\tStat,\r\n\tType,\r\n\tValueSign\r\n} from './states';\r\n\r\nexport const images: Map<string, HTMLImageElement> = new Map();\r\n\r\nexport function importImages() {\r\n  return Promise.all(\r\n    imageNames.map(async (imageName: string) => {\r\n      const path = (await import(`./lib/images/${imageName}.png`)).default\r\n      const image = new Image()\r\n      image.src = path\r\n      images.set(imageName, image)\r\n      await new Promise(resolve => image.onload = resolve)\r\n    })\r\n  )\r\n}\r\n\r\nexport function importCardImages(name: string) {\r\n  return Promise.all(\r\n    cardImageNames.map(async (imageName: string) => {\r\n      const path = (await import(`./lib/images/cards/${name}/${imageName}.png`)).default\r\n      const image = new Image()\r\n      image.src = path\r\n      images.set(imageName, image)\r\n      await new Promise(resolve => image.onload = resolve)\r\n    })\r\n  )\r\n}\r\n\r\nexport async function importCardImage(hero: string, card: string) {\r\n\tconst path = (await import(`./lib/images/cards/${hero}/${card}.png`)).default\r\n\tconst image = new Image()\r\n\timage.src = path\r\n\timages.set(card, image)\r\n\treturn await new Promise(resolve => image.onload = resolve)\r\n}\r\n\r\nfunction clear(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D): void {\r\n  context.clearRect(0, 0, canvas.width, canvas.height)\r\n}\r\n\r\nfunction addImage(context: CanvasRenderingContext2D, name: string, x: number, y: number): void {\r\n  context.drawImage(<CanvasImageSource>images.get(name), x, y)\r\n}\r\n\r\nfunction addEmoji(context: CanvasRenderingContext2D, name: string, x: number, y: number): void {\r\n  context.drawImage(<CanvasImageSource>images.get(name), x, y, 64 * (<HTMLImageElement>images.get(name)).width / (<HTMLImageElement>images.get(name)).height, 64)\r\n}\r\n\r\nfunction addCustomEmoji(context: CanvasRenderingContext2D, customEmoji: Array<[string, HTMLImageElement]>, name: string, x: number, y: number): void {\r\n  const img = customEmoji.find(item => item[0] == name)![1]\r\n  context.drawImage(img, x, y, 64 * img.width / img.height, 64)\r\n}\r\n\r\nfunction addCardDescription(context: CanvasRenderingContext2D, customEmoji: Array<[string, HTMLImageElement]>, text: string, x: number, y: number): void {\r\n  if (text == \"---\") {\r\n    context.beginPath()\r\n    context.moveTo(x - 381, y - 11)\r\n    context.lineTo(x + 381, y - 11)\r\n    context.lineWidth = 2\r\n    context.stroke()\r\n  } else if (text.startsWith(\"~\")) {\r\n    addTextItalic(context, text.substring(1), x, y)\r\n  } else if (text.startsWith(\">>\")) {\r\n    addTextWithBold(context, customEmoji, \"•  \" + text.substring(2), x - 490, y, true)\r\n  } else if (text.startsWith(\">\")) {\r\n    addTextWithBold(context, customEmoji, text.substring(1), x - 445, y, true)\r\n  } else\r\n    addTextWithBold(context, customEmoji, text, x, y)\r\n}\r\n\r\nfunction addTextWithBold(context: CanvasRenderingContext2D, customEmoji: Array<[string, HTMLImageElement]>, text: string, x: number, y: number, left: boolean = false): void {\r\n  context.font = \"49px Arial\"\r\n  context.textAlign = \"left\"\r\n  const tempText = \"@\" + text + \"@\"\r\n  const parts = tempText.split(\"**\")\r\n  const fullTextWidth = context.measureText(text.replaceAll(\"**\", \"\").split(\"::\").reduce((sum, val, i) => i % 2 == 0 ? sum + val : sum, \"\")).width\r\n    + text.replaceAll(\"**\", \"\").split(\"::\").reduce((sum, _, i) => i % 2 ? sum + 64 : sum, 0)\r\n  let indent = 0\r\n  parts.forEach((part, index) => {\r\n    part = part.replaceAll(\"@\", \"\")\r\n    if (index % 2)\r\n      context.font = \"bold 49px Arial\"\r\n    else\r\n      context.font = \"49px Arial\"\r\n    const emojiParts = (\"@\" + part + \"@\").split(\"::\")\r\n    emojiParts.forEach((emojiPart, i) => {\r\n      emojiPart = emojiPart.replaceAll(\"@\", \"\")\r\n      if (i % 2) {\r\n        if (defaultEmoji.includes(emojiPart))\r\n          addEmoji(context, emojiPart, x - (left ? 0 : (fullTextWidth / 2)) + indent, y - 50)\r\n        if (customEmoji.find((item => item[0] == emojiPart)))\r\n          addCustomEmoji(context, customEmoji, emojiPart, x - (left ? 0 : (fullTextWidth / 2)) + indent, y - 50)\r\n        indent += 64\r\n      } else {\r\n        const partWidth = context.measureText(emojiPart).width\r\n        context.fillText(emojiPart, x - (left ? 0 : (fullTextWidth / 2)) + indent, y)\r\n        indent += partWidth\r\n      }\r\n    })\r\n  })\r\n  context.textAlign = \"center\"\r\n}\r\n\r\nfunction addTextItalic(context: CanvasRenderingContext2D, text: string, x: number, y: number): void {\r\n  context.font = \"italic 36px Arial\"\r\n  context.fillText(text, x, y)\r\n}\r\n\r\nfunction addCardType(context: CanvasRenderingContext2D, text: string, x: number, y: number): void {\r\n  addOutlinedText(context, text, x, y, 54, 6, 604)\r\n}\r\n\r\nfunction addOutlinedText(context: CanvasRenderingContext2D, text: string, x: number, y: number, fontSize: number, outlineSize: number, widthLimit?: number) {\r\n  context.font = `${fontSize}px Modesto Poster`\r\n  context.lineWidth = outlineSize\r\n  context.strokeText(text, x, y, widthLimit)\r\n  context.fillStyle = \"white\"\r\n  context.fillText(text, x, y, widthLimit)\r\n  context.fillStyle = \"black\"\r\n}\r\n\r\nfunction addTitle(context: CanvasRenderingContext2D, text: string, x: number, y: number, widthLimit?: number) {\r\n  context.textAlign = \"center\"\r\n  context.font = \"66px Modesto Poster\"\r\n  context.fillText(text, x, y, widthLimit)\r\n}\r\n\r\nfunction addInitiative(context: CanvasRenderingContext2D, value: number, x: number, y: number, bonus: number, showNumbers: boolean, color: Color, level: string, initiativeStat: number) {\r\n  if (showNumbers || color == Color.SILVER)\r\n    addSquishedOutlinedText(context, value.toString(), x, y, 197, 14, 0.92, false, bonus)\r\n  else {\r\n    const supposedValue = cardStats.get(color)!.get(Stat.INITIATIVE)!.get(level)![initiativeStat - 1]\r\n    const difference = value - supposedValue\r\n    let symbol = \"\"\r\n    if (difference == 1) symbol = \"›\"\r\n    if (difference > 1) symbol = \"»\"\r\n    if (difference == -1) symbol = \"‹\"\r\n    if (difference < -1) symbol = \"«\"\r\n    addSquishedOutlinedText(context, symbol, x, y + 25, 296, 14, 0.92, false, bonus, false)\r\n  }\r\n}\r\n\r\nfunction addModifierValue(context: CanvasRenderingContext2D, value: number, x: number, y: number, bonus: number = 0): number {\r\n\treturn addSquishedOutlinedText(context, value.toString(), x, y, 156, 14, 0.875, false, bonus)\r\n}\r\n\r\nfunction addBlockValue(context: CanvasRenderingContext2D, value: string, x: number, y: number, bonus: number = 0): number {\r\n\treturn addSquishedOutlinedText(context, value, x, y, 156, 14, 0.875, false, bonus)\r\n}\r\n\r\nfunction addPrimaryValue(context: CanvasRenderingContext2D, value: number, x: number, y: number, bonus: number = 0, showNumbers: boolean, color: Color, level: string, stat: Stat, statNumber: number): number {\r\n\tif (showNumbers)\r\n  \treturn addSquishedOutlinedText(context, value.toString(), x, y, 156, 14, 0.875, false, bonus)\r\n\telse {\r\n\t\tconst supposedValue = cardStats.get(color)!.get(stat)!.get(level)![statNumber - 1]\r\n\t\tconst difference = value - supposedValue\r\n\t\tlet symbol = \"\"\r\n\t\tif (difference == 1) symbol = \"›\"\r\n\t\tif (difference > 1) symbol = \"»\"\r\n\t\tif (difference == -1) symbol = \"‹\"\r\n\t\tif (difference < -1) symbol = \"«\"\r\n\t\treturn addSquishedOutlinedText(context, symbol, x, y + 18, 244, 14, 0.875, false, bonus, false)\r\n\t}\r\n}\r\n\r\nfunction addSign(context: CanvasRenderingContext2D, text: string, x: number, y: number) {\r\n  addSquishedOutlinedText(context, text, x, y, 156, 14, 0.875, true)\r\n}\r\n\r\nfunction addSecondaryValue(context: CanvasRenderingContext2D, value: number, x: number, y: number, bonus: number = 0, showNumbers: boolean, color: Color, level: string, stat: Stat, statNumber: number) {\r\n\tif (showNumbers)\r\n  \taddSquishedOutlinedText(context, value.toString(), x, y, 136, 14, 0.875, false, bonus)\r\n\telse {\r\n\t\tconst supposedValue = cardStats.get(color)!.get(stat)!.get(level)![statNumber - 1]\r\n\t\tconst difference = value - supposedValue\r\n\t\tlet symbol = \"\"\r\n\t\tif (difference == 1) symbol = \"›\"\r\n\t\tif (difference > 1) symbol = \"»\"\r\n\t\tif (difference == -1) symbol = \"‹\"\r\n\t\tif (difference < -1) symbol = \"«\"\r\n\t\treturn addSquishedOutlinedText(context, symbol, x, y + 10, 204, 14, 0.875, false, bonus, false)\r\n\t}\r\n}\r\n\r\nfunction addSquishedOutlinedText(\r\n  context: CanvasRenderingContext2D,\r\n  text: string,\r\n  x: number,\r\n  y: number,\r\n  fontSize: number,\r\n  outlineSize: number,\r\n  squishness: number,\r\n  left: boolean = false,\r\n  bonus: number = 0,\r\n\tshowNumbers: boolean = true,\r\n): number {\r\n  const tempCanvas = document.createElement('canvas')\r\n  tempCanvas.width = 400\r\n  tempCanvas.height = 400\r\n  const tempContext = tempCanvas.getContext('2d')!\r\n  tempContext.textAlign = left ? \"left\" : \"center\"\r\n  tempContext.font = `${fontSize}px Modesto Poster`\r\n  tempContext.lineWidth = outlineSize\r\n  tempContext.strokeText(text, 200, 200)\r\n  switch (bonus) {\r\n    case 0:\r\n      tempContext.fillStyle = \"white\"\r\n      break\r\n    case 1:\r\n      tempContext.fillStyle = \"palegreen\"\r\n      break\r\n    case 2:\r\n      tempContext.fillStyle = \"powderblue\"\r\n      break\r\n    case 3:\r\n      tempContext.fillStyle = \"plum\"\r\n      break\r\n  }\r\n  tempContext.fillText(text, 200, 200)\r\n  tempContext.fillStyle = \"black\"\r\n\r\n\tif (!showNumbers) {\r\n\t\tconst tempCanvas2 = document.createElement('canvas')\r\n\t\ttempCanvas2.width = 400\r\n\t\ttempCanvas2.height = 400\r\n\t\tconst tempContext2 = tempCanvas2.getContext('2d')!\r\n\t\ttempContext2.rotate(-Math.PI / 2)\r\n\t\ttempContext2.drawImage(tempCanvas, -400, 0)\r\n\r\n\t\tcontext.drawImage(tempCanvas2, 0, 0, 400, 400, x - 200 + 0.3 * fontSize, y - 200 - 0.3 * fontSize, 400, 400)\r\n\t\treturn fontSize * 0.4\r\n\t} else {\r\n\t\tcontext.drawImage(tempCanvas, 0, 0, 400, 400, x - 200 * squishness, y - 200, 400 * squishness, 400)\r\n\t\treturn tempContext.measureText(text).width * squishness\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/card_painter.ts b/src/card_painter.ts
--- a/src/card_painter.ts	(revision 9242ac5b6636b479f8dbecbabce62dbe4675670a)
+++ b/src/card_painter.ts	(date 1716067872715)
@@ -761,7 +761,7 @@
 export function importCardImages(name: string) {
   return Promise.all(
     cardImageNames.map(async (imageName: string) => {
-      const path = (await import(`./lib/images/cards/${name}/${imageName}.png`)).default
+      const path = (await import(`./lib/images/cards/${name}/${imageName}.jpg`)).default
       const image = new Image()
       image.src = path
       images.set(imageName, image)
@@ -771,7 +771,7 @@
 }
 
 export async function importCardImage(hero: string, card: string) {
-	const path = (await import(`./lib/images/cards/${hero}/${card}.png`)).default
+	const path = (await import(`./lib/images/cards/${hero}/${card}.jpg`)).default
 	const image = new Image()
 	image.src = path
 	images.set(card, image)
